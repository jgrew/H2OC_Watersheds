(self.webpackChunkh2oc=self.webpackChunkh2oc||[]).push([[9895],{59895:(e,t,r)=>{var i,n;i=[r(58797),r(11285),r(74637),r(3718),r(73462),r(67059),r(26475),r(99752),r(25179),r(4037),r(51916),r(18377),r(9720),r(88710),r(95791),r(64393),r(8336),r(23704),r(25548),r(87842),r(52058),r(40162),r(93511),r(45095),r(65131),r(89560)],void 0===(n=function(e,t,r,i,n,o,a,s,l,u,p,c,d,m,y,f,h,g,_,v,R,w,b,S,x,I){"use strict";let O=function(t){function r(...e){var r;return(r=t.call(this,...e)||this).legendEnabled=!0,r.isReference=null,r.operationalLayerType="ArcGISImageServiceLayer",r.popupEnabled=!0,r.popupTemplate=null,r.type="imagery",r}e._inheritsLoose(r,t);var n=r.prototype;return n.normalizeCtorArgs=function(e,t){return"string"==typeof e?{url:e,...t}:e},n.load=function(e){const t=i.isSome(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),d.resolve(this)},n.writeOperationalLayerType=function(e,t,r){var i;const n="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=n?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"},n.createPopupTemplate=function(e){const t=this.rasterFields,r=this.title,i=new Set;let n=!1,o=!1;this.capabilities&&(n=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,o=n&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const a=new Set;n&&(a.add("raster.itempixelvalue"),o&&a.add("raster.magnitude").add("raster.direction"));for(const e of t){const t=e.name.toLowerCase();a.has(t)||t.indexOf("raster.servicepixelvalue.")>-1||i.add(e.name)}return x.createPopupTemplate({fields:t,title:r},{...e,visibleFieldNames:i})},n.redraw=function(){this.emit("redraw")},e._createClass(r,[{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}}]),r}(v.BlendLayer(S.TemporalLayer(w.RefreshableLayer(b.ScaleRangeLayer(g.OperationalLayer(R.PortalLayer(I.ArcGISImageService(_.ArcGISService(f.MultiOriginJSONMixin(y))))))))));return t.__decorate([a.property(h.legendEnabled)],O.prototype,"legendEnabled",void 0),t.__decorate([a.property({type:["show","hide"]})],O.prototype,"listMode",void 0),t.__decorate([a.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],O.prototype,"isReference",void 0),t.__decorate([a.property({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],O.prototype,"operationalLayerType",void 0),t.__decorate([l.writer("web-map","operationalLayerType")],O.prototype,"writeOperationalLayerType",null),t.__decorate([a.property(h.popupEnabled)],O.prototype,"popupEnabled",void 0),t.__decorate([a.property({type:m,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],O.prototype,"popupTemplate",void 0),t.__decorate([a.property({readOnly:!0,dependsOn:["fields","title"]})],O.prototype,"defaultPopupTemplate",null),t.__decorate([a.property({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),O=t.__decorate([s.subclass("esri.layers.ImageryLayer")],O),O}.apply(t,i))||(e.exports=n)},89560:(e,t,r)=>{var i,n;i=[t,r(58797),r(11285),r(74637),r(92231),r(3718),r(73462),r(67059),r(26475),r(94718),r(86928),r(59376),r(99752),r(25179),r(49359),r(4037),r(51916),r(18377),r(9720),r(23084),r(35558),r(12997),r(50257),r(26016),r(40810),r(31099),r(8336),r(45173),r(9377),r(62631),r(97949),r(57517),r(909),r(39453),r(77098),r(72675),r(23439),r(6047),r(64525),r(76519),r(97057),r(53952),r(54181),r(16169),r(39718),r(25294),r(58040)],void 0===(n=function(e,r,i,n,o,a,s,l,u,p,c,d,m,y,f,h,g,_,v,R,w,b,S,x,I,O,N,T,P,C,M,F,j,D,A,V,J,E,L,k,z,U,q,H,Q,B,G){"use strict";const W=s.getLogger("esri.layers.mixins.ArcGISImageService"),X=c.strict()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),$=c.strict()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),Y=c.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),K=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Z=u.ensureRange(l.ensureNumber,{min:0,max:255});t.ArcGISImageService=e=>{let t=function(e){function t(){var t;return(t=e.apply(this,arguments)||this)._functionRasterInfos={},t._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},t._symbolizer=null,t._defaultServiceMosaicRule=null,t.rasterAttributeTableFieldPrefix="Raster.",t.adjustAspectRatio=null,t.bandCount=null,t.bandIds=void 0,t.capabilities=null,t.compressionQuality=void 0,t.compressionTolerance=.01,t.copyright=null,t.definitionExpression=null,t.exportImageServiceParameters=null,t.rasterInfo=null,t.fields=null,t.fullExtent=null,t.hasMultidimensions=!1,t.imageMaxHeight=4100,t.imageMaxWidth=4100,t.interpolation=void 0,t.minScale=0,t.maxScale=0,t.multidimensionalInfo=null,t.noData=null,t.noDataInterpretation=void 0,t.objectIdField=null,t.pixelSizeX=null,t.pixelSizeY=null,t.pixelFilter=null,t.raster=void 0,t.viewId=void 0,t.renderer=null,t.rasterAttributeTable=null,t.rasterFunctionInfos=null,t.serviceDataType=null,t.spatialReference=null,t.pixelType=null,t.serviceRasterInfo=null,t.sourceJSON=null,t.url=null,t.version=null,t}r._inheritsLoose(t,e);var i=t.prototype;return i.initialize=function(){this._set("exportImageServiceParameters",new L.ExportImageServiceParameters({layer:this}))},i.readDefaultServiceMosaicRule=function(e,t){return E.fromJSON(t)},i.readBandIds=function(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e},i.readCapabilities=function(e,t){return this._readCapabilities(t)},i.writeCompressionQuality=function(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)},i.writeCompressionTolerance=function(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)},i.readFormat=function(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"},i.readMinScale=function(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0},i.readMaxScale=function(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0},i.readMosaicRule=function(e,t){return E.fromJSON(e||t.mosaicRule||t)},i.writeMosaicRule=function(e,t,r){let i=this.mosaicRule;const n=this.definitionExpression;i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new E({where:n})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())},i.writeNoData=function(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Z(e))},i.readObjectIdField=function(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e},i.readRenderer=function(e,t,r){const i=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=P.read(i,r)||void 0;if(null!=n)return J.isSupportedRendererType(n)||W.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n},i.readRenderingRule=function(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?V.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null},i.writeRenderingRule=function(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())},i.readSpatialReference=function(e,t){const r=e||t.extent.spatialReference;return r?R.fromJSON(r):null},i.readPixelType=function(e){return Y.fromJSON(e)||e},i.writePixelType=function(e,t,r){(a.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=Y.toJSON(e))},i.readVersion=function(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r},i.applyFilter=function(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t},i.applyRenderer=async function(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),n=this._rasterJobHandler.instance,{bandIds:o}=this;if(n){i&&(this._symbolizer.bind(),await n.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const a=await n.symbolize({bandIds:o,...e},t);r={extent:e.extent,pixelBlock:a}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:o,...e})}}return r},i.destroy=function(){this._shutdownJobHandler()},i.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++},i.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()},i.computeHistograms=async function(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeHistograms)throw new f("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=e.clone();const{raster:i,mosaicRule:n,renderingRule:o}=this;return o&&null==e.renderingRule&&(e.renderingRule=o),n&&null==e.mosaicRule&&(e.mosaicRule=n),i&&null==e.raster&&(e.raster=i),Q.computeHistograms(this.url,e,{signal:r})},i.computeStatisticsHistograms=async function(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new f("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=e.clone();const{raster:i,mosaicRule:n,renderingRule:o}=this;return o&&null==e.renderingRule&&(e.renderingRule=o),n&&null==e.mosaicRule&&(e.mosaicRule=n),i&&null==e.raster&&(e.raster=i),Q.computeStatisticsHistograms(this.url,e,{signal:r})},i.fetchImage=function(e,t,r,i={}){if(null==e||null==t||null==r)return v.reject(new f("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const n=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return v.when(n).then((n=>{n&&(this.rasterInfo=n);const o={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(o)}))},i.fetchKeyProperties=function(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return I(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))},i.fetchRasterAttributeTable=function(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?v.reject(new f("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):I(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>F.fromJSON(e.data)))},i.getCatalogItemRasterInfo=async function(e,t){const r=I(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=I(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),n=await v.all([r,i]);if(!n[0])return;const o=b.fromJSON(n[0].extent),a=n[0].statistics?n[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new k({bandCount:n[0].bandCount,extent:o,spatialReference:o.sr,pixelSize:new w({x:n[0].pixelSizeX,y:n[0].pixelSizeY,spatialReference:o.sr}),pixelType:n[0].pixelType.toLowerCase(),statistics:a,histograms:n[0].histograms,keyProperties:n[1]||{}})},i.getCatalogItemICSInfo=async function(e,t){const{data:r}=await I(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let n=null;try{n=(await I(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?I(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=n.spatialReference,s={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},l=I(this.parsedUrl.path+"/project",{query:this._getQueryParams(s),...t}).then((e=>e.data)).catch((()=>({}))),u=(n.xmin+n.xmax)/2,p=(n.ymax-n.ymin)/6,c=n.ymin+p,d=[];for(let e=0;e<5;e++)d.push({x:u,y:c+p*e});const m={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},y=I(this.parsedUrl.path+"/project",{query:this._getQueryParams(m),...t}).then((e=>e.data)).catch((()=>({}))),f=await v.all([o,l,y]);let h=f[0].ipxf;if(null==h){var g,_,w;const e=null==(g=i.geodataXform)?void 0:g.xf_0;"topup"===(null==e||null==(_=e.name)?void 0:_.toLowerCase())&&6===(null==e||null==(w=e.coefficients)?void 0:w.length)&&(h={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const S=b.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]);S&&(S.spatialReference=new R({wkid:0,imageCoordinateSystem:i}));const x=f[2].geometries?f[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],O=x.length;if(O<3)return{ics:i,icsToPixelTransform:h,icsExtent:S,northDirection:null};let N=0,T=0,P=0,C=0;for(let e=0;e<O;e++)N+=x[e].x,T+=x[e].y,P+=x[e].x*x[e].x,C+=x[e].x*x[e].y;const M=(O*C-N*T)/(O*P-N*N);let F=0;const j=x[4].x>x[0].x,D=x[4].y>x[0].y;return M===1/0?F=D?90:270:0===M?F=j?0:180:M>0?F=j?180*Math.atan(M)/Math.PI:180*Math.atan(M)/Math.PI+180:M<0&&(F=D?180+180*Math.atan(M)/Math.PI:360+180*Math.atan(M)/Math.PI),{ics:i,icsToPixelTransform:h,icsExtent:S,northDirection:F}},i.generateRasterInfo=async function(e,t){if((!e||"none"===e.functionName.toLowerCase())&&a.isSome(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}},i.getExportImageServiceParameters=function(e,t,r,i){const n=(e=e.clone().shiftCentralMeridian()).spatialReference;let o;if(n.imageCoordinateSystem){const{id:e,referenceServiceName:t}=n.imageCoordinateSystem;o=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:n.imageCoordinateSystem})}else o=n.wkid||JSON.stringify(n.toJSON());a.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const s=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:u,mosaicRule:p,renderingRule:c}=s;l instanceof Array&&l.length>0&&(s.bandIds=l.join(",")),u instanceof Array&&u.length>0&&(s.noData=u.join(","));const d=this.timeInfo;p&&p.multidimensionalDefinition&&i&&d&&d.startField&&(p.multidimensionalDefinition=p.multidimensionalDefinition.filter((e=>e.dimensionName!==d.startField))),s.mosaicRule=p&&JSON.stringify(p),s.renderingRule=c&&JSON.stringify(c);const m={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?m.time=""+e:null==e&&null==t||(m.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:o,imageSR:o,size:t+","+r,...s,...m}},i.identify=async function(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new f("imagery-layer:query-rasters","query operation is not supported on the input image service");e=e.clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),new B({url:this.url}).execute(e,t)},i.queryRasters=async function(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsQuery)throw new f("imagery-layer:query-rasters","query operation is not supported on the input image service");return this.queryTask.execute(e,t)},i.queryVisibleRasters=function(e,t){if(!e)return v.reject(new f("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:n,showNoDataRecords:o}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let s=!1,l=null,u=null;const p="raster.servicepixelvalue",c=this.rasterFunctionNamesIndex;if(a.isSome(e.outFields)&&(s=e.outFields.some((e=>-1===e.toLowerCase().indexOf(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(p)>-1&&e.length>p.length)).map((e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]}));l=t.map((e=>new V({functionName:e[0]}))),u=t.map((e=>e[1])),0===l.length?this.renderingRule?(l.push(this.renderingRule),u.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some((e=>e.functionName===this.renderingRule.functionName))&&(l.push(this.renderingRule),u.push(this.renderingRule.functionName))}const d=a.isNone(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),m=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:s,returnGeometry:d,maxItemCount:n?1:null});delete m.f;const y=new G(m),h=new B({url:this.url}),g=this.generateRasterInfo(this.renderingRule);return v.create((t=>{g.then((()=>{h.execute(y).then((r=>{const n=e.outFields;if(s&&!d&&r.catalogItems&&r.catalogItems.features&&r.catalogItems.features.length>0){const a=this.objectIdField||"ObjectId",s=r.catalogItems.features,l=s.map((e=>e.attributes&&e.attributes[a])),p=new j({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[a]});return this.queryRasters(p).then((l=>{l&&l.features&&l.features.length>0&&l.features.forEach((t=>{s.forEach((r=>{r.attributes[a]===t.attributes[a]&&(r.geometry=new S(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:o,templateFields:n}))})).catch((()=>{throw new f("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:o,templateFields:n}))})).catch((()=>{throw new f("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}))}))}))},i.fetchVariableStatisticsHistograms=async function(e,t){const r=I(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=I(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=await v.all([r,i]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}},i._fetchService=async function(e){await this._fetchServiceInfo(e),a.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=a.isSome(this.serviceRasterInfo)?v.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return v.all([r,i]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this.renderer&&q.getSupportedRendererTypes(this.rasterInfo).indexOf(this.renderer.type)<0&&(this.renderer=null,W.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",(()=>this._configDefaultRenderer())),this.watch("renderingRule",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=a.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))},i._initJobHandler=async function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new z;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise},i._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0},i._fetchCapabilities=async function(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities},i._fetchServiceInfo=async function(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await I(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new f("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})},i._isPicture=function(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1},i._configDefaultRenderer=function(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=q.getDefaultBandCombination(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=q.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=this.renderer.toJSON(),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new H({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}},i._clonePixelData=function(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}},i._getQueryParams=function(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e}},i._decodePixelBlock=function(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):U.decode(e,t,r)},i._fetchMultidimensionalInfo=async function(e){var t;const r=await I(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r},i._fetchAuxiliaryRasterInfo=function(e){const t=e&&e.serviceInfo;if(!t)return v.reject(new f("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,n=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&I(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>F.fromJSON(e.data))).catch((()=>null)),o=!!(t.hasColormap&&this.version>=10.1)&&I(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),a=!!(t.hasHistograms&&this.version>=10.1)&&I(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=this.version>=10.3&&I(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return v.all([n,o,a,s,l]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),o=R.fromJSON(t.spatialReference||t.extent.spatialReference);return new k({width:i,height:n,bandCount:t.bandCount,extent:b.fromJSON(t.extent),spatialReference:o,pixelSize:new w({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:o}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))},i._requestArrayBuffer=function(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return I(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then((e=>({imageElement:e.data,params:t})));const n=this._initJobHandler(),o=I(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return v.all([o,n]).then((e=>{const r=e[0].data,n=t.format||"jpgpng";let o=n;if("bsq"!==o&&"bip"!==o&&(o=U.getFormat(r)),!o)throw new f("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const a="gif"===n||"bmp"===n||n.indexOf("png")>-1&&("png"===o||"jpg"===o),s={signal:i};return a?U.decode(r,{useCanvas:!0,...t},s).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:n},s).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))},i._generateRasterInfo=async function(e,t){const{data:r}=await I(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})},i._isValidCustomizedMosaicRule=function(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())},i._updateMultidimensionalDefinition=function(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const e in t)if(t.hasOwnProperty(e)){const i=t[e],n=i.extent;let o=!0,a=[n[0]];i.hasRanges&&!0===i.hasRanges?(o=!1,a=[i.values[0]]):"stdz"===i.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(a=[n[1]]),r.push(new A({variableName:"",dimensionName:t[e].name,isSlice:o,values:a}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new E;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}},i._formatAttributeValue=function(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),n=i&&i.format;if(n){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,n)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,n)):this._formatNumberFromString(e,n)}}return e},i._getFieldInfo=function(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_")||(i=e,0)))),i},i._formatDelimitedString=function(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e},i._formatNumberFromString=function(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)},i._processVisibleRastersResponse=function(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:n,returnDomainValues:o,templateFields:s}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const c=this.objectIdField||"ObjectId",d="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,m=[];if(r&&!u&&!d){const e={};e[c]=0,p=[r],u=[new O(this.fullExtent,null,e)]}if(!u)return[];let y,f,h;this._updateResponseFieldNames(u,s);for(let e=0;e<u.length;e++){if(y=u[e],null!=r&&!d){if(f=p[e],h=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===f.toLowerCase()&&!n)continue;const t="Raster.ItemPixelValue",o="Raster.ServicePixelValue";y.attributes[t]=this._formatAttributeValue(f,t),y.attributes[o]=this._formatAttributeValue(h,o),this._updateFeatureWithMagDirValues(y,f);const s=this.fields&&this.fields.length>0;let u=this.renderingRule&&a.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?s?f:r:h;this.renderingRule||(u=s?f:r),this._updateFeatureWithRasterAttributeTableValues(y,u)}if(y.sourceLayer=this,o&&this._updateFeatureWithDomainValues(y),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];y.attributes[t]=this._formatAttributeValue(l[e],t)}m.push(u[e])}return m},i._updateFeatureWithRasterAttributeTableValues=function(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||a.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const n=r.fields,o=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),s=o&&o[0];if(!s)return;const l=i.filter((e=>e.attributes[s]===(null!=t?parseInt(t,10):null)));l&&l[0]&&n.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)}))},i._updateFeatureWithMagDirValues=function(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.replace(" ",",").split(",").map((e=>parseFloat(e))),i=r.map((e=>[e])),n=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),o=new T({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});this.pixelFilter({pixelBlock:o,extent:new b(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=o.pixels[0][0],e.attributes["Raster.Direction"]=o.pixels[1][0]},i._updateFeatureWithDomainValues=function(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name)}}))},i._updateResponseFieldNames=function(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))},i._updateRenderingRulesFunctionName=function(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e},i._isRFTJson=function(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")},i._readCapabilities=function(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:n}=e,o=t.indexOf("image")>-1,a="esriImageServiceDataTypeElevation"===e.serviceDataType,s=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:o,supportsExportImage:o,supportsIdentify:o,supportsMeasure:t.indexOf("mensuration")>-1&&s,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&o,supportsProject:r>=10.3&&o,supportsComputeStatisticsHistograms:r>=10.4&&o,supportsQueryBoundary:r>=10.6&&o,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:n}}},r._createClass(t,[{key:"rasterFunctionNamesIndex",get:function(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}},{key:"queryTask",get:function(){return new D({url:this.url})}},{key:"fieldsIndex",get:function(){return this.fields?new M(this.fields):null}},{key:"format",set:function(e){e&&K.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}},{key:"mosaicRule",set:function(e){let t=e;t&&t.mosaicMethod&&(t=E.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}},{key:"parsedUrl",get:function(){return this.url?h.urlToObject(this.url):null}},{key:"rasterFields",get:function(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new C({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new C({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new C({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?o.clone(this.fields):[];n.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new C({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(n.push(new C({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new C({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const a=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(a&&a.length>0){const t=a.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=o.clone(t);return r.name=e+t.name,r}));n=n.concat(t)}return n}},{key:"renderingRule",set:function(e){let t=e;t&&t.rasterFunction&&(t=V.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}}]),t}(e);return i.__decorate([u.property()],t.prototype,"_functionRasterInfos",void 0),i.__decorate([u.property()],t.prototype,"_rasterJobHandler",void 0),i.__decorate([u.property()],t.prototype,"_symbolizer",void 0),i.__decorate([u.property()],t.prototype,"_defaultServiceMosaicRule",void 0),i.__decorate([d.reader("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),i.__decorate([u.property()],t.prototype,"_cachedRendererJson",void 0),i.__decorate([u.property()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),i.__decorate([u.property({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],t.prototype,"rasterFunctionNamesIndex",null),i.__decorate([u.property({readOnly:!0,dependsOn:["url"]})],t.prototype,"queryTask",null),i.__decorate([u.property()],t.prototype,"adjustAspectRatio",void 0),i.__decorate([u.property({readOnly:!0}),p.aliasOf("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),i.__decorate([u.property({type:[l.Integer],json:{write:!0}})],t.prototype,"bandIds",void 0),i.__decorate([d.reader("bandIds")],t.prototype,"readBandIds",null),i.__decorate([u.property({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),i.__decorate([d.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),i.__decorate([u.property({type:Number})],t.prototype,"compressionQuality",void 0),i.__decorate([y.writer("compressionQuality")],t.prototype,"writeCompressionQuality",null),i.__decorate([u.property({type:Number})],t.prototype,"compressionTolerance",void 0),i.__decorate([y.writer("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),i.__decorate([u.property({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),i.__decorate([u.property({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],t.prototype,"definitionExpression",void 0),i.__decorate([u.property({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),i.__decorate([u.property()],t.prototype,"rasterInfo",void 0),i.__decorate([u.property({readOnly:!0,type:[C]})],t.prototype,"fields",void 0),i.__decorate([u.property({readOnly:!0,dependsOn:["fields"]})],t.prototype,"fieldsIndex",null),i.__decorate([u.property({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),i.__decorate([d.reader("service","format",["serviceDataType"])],t.prototype,"readFormat",null),i.__decorate([u.property({type:b})],t.prototype,"fullExtent",void 0),i.__decorate([u.property({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),i.__decorate([u.property({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),i.__decorate([u.property({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),i.__decorate([u.property({type:String,json:{type:X.jsonValues,read:X.read,write:X.write}})],t.prototype,"interpolation",void 0),i.__decorate([u.property()],t.prototype,"minScale",void 0),i.__decorate([d.reader("service","minScale")],t.prototype,"readMinScale",null),i.__decorate([u.property()],t.prototype,"maxScale",void 0),i.__decorate([d.reader("service","maxScale")],t.prototype,"readMaxScale",null),i.__decorate([u.property({type:E})],t.prototype,"mosaicRule",null),i.__decorate([d.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),i.__decorate([y.writer("mosaicRule")],t.prototype,"writeMosaicRule",null),i.__decorate([u.property({readOnly:!0}),p.aliasOf("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),i.__decorate([u.property({json:{type:l.Integer}})],t.prototype,"noData",void 0),i.__decorate([y.writer("noData")],t.prototype,"writeNoData",null),i.__decorate([u.property({type:String,json:{type:$.jsonValues,read:$.read,write:$.write}})],t.prototype,"noDataInterpretation",void 0),i.__decorate([u.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),i.__decorate([d.reader("objectIdField")],t.prototype,"readObjectIdField",null),i.__decorate([u.property({readOnly:!0,dependsOn:["url"]})],t.prototype,"parsedUrl",null),i.__decorate([u.property({readOnly:!0}),p.aliasOf("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),i.__decorate([u.property({readOnly:!0}),p.aliasOf("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),i.__decorate([u.property({type:Function})],t.prototype,"pixelFilter",void 0),i.__decorate([u.property()],t.prototype,"raster",void 0),i.__decorate([u.property()],t.prototype,"viewId",void 0),i.__decorate([u.property({types:P.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:P.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],t.prototype,"renderer",void 0),i.__decorate([d.reader("renderer")],t.prototype,"readRenderer",null),i.__decorate([u.property(N.opacityDrawingInfo)],t.prototype,"opacity",void 0),i.__decorate([u.property({readOnly:!0}),p.aliasOf("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),i.__decorate([u.property({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],t.prototype,"rasterFields",null),i.__decorate([u.property({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),i.__decorate([u.property({type:V})],t.prototype,"renderingRule",null),i.__decorate([d.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),i.__decorate([y.writer("renderingRule")],t.prototype,"writeRenderingRule",null),i.__decorate([u.property()],t.prototype,"serviceDataType",void 0),i.__decorate([u.property({readOnly:!0,type:R})],t.prototype,"spatialReference",void 0),i.__decorate([d.reader("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),i.__decorate([u.property({json:{type:Y.jsonValues}})],t.prototype,"pixelType",void 0),i.__decorate([d.reader("pixelType")],t.prototype,"readPixelType",null),i.__decorate([y.writer("pixelType")],t.prototype,"writePixelType",null),i.__decorate([u.property({constructOnly:!0,type:k})],t.prototype,"serviceRasterInfo",void 0),i.__decorate([u.property()],t.prototype,"sourceJSON",void 0),i.__decorate([u.property(N.url)],t.prototype,"url",void 0),i.__decorate([u.property({readOnly:!0})],t.prototype,"version",void 0),i.__decorate([d.reader("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=i.__decorate([m.subclass("esri.layers.mixins.ArcGISImageService")],t),t},Object.defineProperty(e,"__esModule",{value:!0})}.apply(t,i))||(e.exports=n)},64525:(e,t,r)=>{var i,n;i=[t,r(58797),r(11285),r(74637),r(73462),r(67059),r(26475),r(94718),r(86928),r(99752),r(25179),r(4037),r(51916),r(18377),r(56162),r(72675),r(23439),r(6047)],void 0===(n=function(e,r,i,n,o,a,s,l,u,p,c,d,m,y,f,h,g,_){"use strict";const v=new u.JSONMap({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),R=new u.JSONMap({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"});t.ExportImageServiceParameters=function(e){function t(){var t;return(t=e.apply(this,arguments)||this).layer=null,t.adjustAspectRatio=void 0,t.bandIds=void 0,t.compression=void 0,t.compressionQuality=void 0,t.compressionTolerance=.01,t.format=null,t.interpolation=null,t.noData=null,t.noDataInterpretation=void 0,t.pixelType=void 0,t.lercVersion=2,t}r._inheritsLoose(t,e);var i=t.prototype;return i.writeAdjustAspectRatio=function(e,t,r){this.layer.version<10.3||(t[r]=e)},i.writeCompressionQuality=function(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)},i.writeCompressionTolerance=function(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)},i.writeLercVersion=function(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)},i.combineRendererWithRenderingRule=function(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:n}=t;return n&&g.isSupportedRendererType(n)?g.combineRenderingRules(g.convertRendererToRenderingRule(n,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i):i},i._addResampleRasterFunction=function(e){var t;let r=null;if("vector-field"===(null==(t=this.layer.renderer)?void 0:t.type)){const e={},t=this.layer.renderingRule;if(!t||"Resample"!==t.functionName){const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;e.rasterFunction="Resample",e.rasterFunctionArguments={ResamplingType:t,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}r=h.fromJSON(e)}return g.combineRenderingRules(r,e)},r._createClass(t,[{key:"version",get:function(){const e=this.layer;return e.bandIds,e.format,e.compressionQuality,e.compressionTolerance,e.interpolation,e.noData,e.noDataInterpretation,e.mosaicRule,e.renderingRule,e.adjustAspectRatio,e.pixelFilter,e.renderer,e.definitionExpression,(this._get("version")||0)+1},set:function(e){this._set("version",e)}},{key:"mosaicRule",get:function(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new _({where:r})),t}},{key:"renderingRule",get:function(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}}]),t}(f.JSONSupport),i.__decorate([s.property()],e.ExportImageServiceParameters.prototype,"layer",void 0),i.__decorate([s.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"adjustAspectRatio",void 0),i.__decorate([c.writer("adjustAspectRatio")],e.ExportImageServiceParameters.prototype,"writeAdjustAspectRatio",null),i.__decorate([s.property({json:{write:!0}}),l.aliasOf("layer.bandIds")],e.ExportImageServiceParameters.prototype,"bandIds",void 0),i.__decorate([s.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"compression",void 0),i.__decorate([s.property({json:{write:!0}}),l.aliasOf("layer.compressionQuality")],e.ExportImageServiceParameters.prototype,"compressionQuality",void 0),i.__decorate([c.writer("compressionQuality")],e.ExportImageServiceParameters.prototype,"writeCompressionQuality",null),i.__decorate([s.property({json:{write:!0}}),l.aliasOf("layer.compressionTolerance")],e.ExportImageServiceParameters.prototype,"compressionTolerance",void 0),i.__decorate([c.writer("compressionTolerance")],e.ExportImageServiceParameters.prototype,"writeCompressionTolerance",null),i.__decorate([s.property({json:{write:!0}}),l.aliasOf("layer.format")],e.ExportImageServiceParameters.prototype,"format",void 0),i.__decorate([s.property({type:String,json:{read:{reader:v.read},write:{writer:v.write}}}),l.aliasOf("layer.interpolation")],e.ExportImageServiceParameters.prototype,"interpolation",void 0),i.__decorate([s.property({json:{write:!0}}),l.aliasOf("layer.noData")],e.ExportImageServiceParameters.prototype,"noData",void 0),i.__decorate([s.property({type:String,json:{read:{reader:R.read},write:{writer:R.write}}}),l.aliasOf("layer.noDataInterpretation")],e.ExportImageServiceParameters.prototype,"noDataInterpretation",void 0),i.__decorate([s.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"pixelType",void 0),i.__decorate([s.property({json:{write:!0}})],e.ExportImageServiceParameters.prototype,"lercVersion",void 0),i.__decorate([c.writer("lercVersion")],e.ExportImageServiceParameters.prototype,"writeLercVersion",null),i.__decorate([s.property({type:Number,dependsOn:["layer.adjustAspectRatio","layer.bandIds","layer.format","layer.compressionQuality","layer.compressionTolerance","layer.definitionExpression","layer.interpolation","layer.noData","layer.noDataInterpretation","layer.mosaicRule","layer.renderingRule","layer.pixelFilter","layer.renderer","lercVersion","pixelType"]})],e.ExportImageServiceParameters.prototype,"version",null),i.__decorate([s.property({dependsOn:["layer.mosaicRule","layer.definitionExpression"],json:{write:!0}})],e.ExportImageServiceParameters.prototype,"mosaicRule",null),i.__decorate([s.property({dependsOn:["layer.renderingRule","layer.renderer","layer.rasterInfo","layer.format"],json:{write:!0}})],e.ExportImageServiceParameters.prototype,"renderingRule",null),t.ExportImageServiceParameters=i.__decorate([p.subclass("esri.layers.mixins.ExportImageServiceParameters")],e.ExportImageServiceParameters),Object.defineProperty(e,"__esModule",{value:!0})}.apply(t,i))||(e.exports=n)},6047:(e,t,r)=>{var i,n;i=[r(58797),r(11285),r(74637),r(92231),r(73462),r(67059),r(26475),r(37055),r(86928),r(59376),r(99752),r(4037),r(51916),r(18377),r(56162),r(35558),r(77098),r(72675)],void 0===(n=function(e,t,r,i,n,o,a,s,l,u,p,c,d,m,y,f,h,g){"use strict";var _;const v=l.strict()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),R=l.strict()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let w=_=function(t){function r(e){var r;return(r=t.call(this,e)||this).ascending=!0,r.itemRenderingRule=null,r.lockRasterIds=null,r.method=null,r.multidimensionalDefinition=null,r.objectIds=null,r.operation=null,r.sortField=null,r.sortValue=null,r.viewpoint=null,r.where=null,r}e._inheritsLoose(r,t);var n=r.prototype;return n.readAscending=function(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending},n.readMethod=function(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone"}return R.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)},n.readOperation=function(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),n=r||(i?v.toJSON(i):null);return v.fromJSON(n)||"first"},n.castSortValue=function(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`},n.clone=function(){return new _({ascending:this.ascending,itemRenderingRule:i.clone(this.itemRenderingRule),lockRasterIds:i.clone(this.lockRasterIds),method:this.method,multidimensionalDefinition:i.clone(this.multidimensionalDefinition),objectIds:i.clone(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:i.clone(this.viewpoint),where:this.where})},r}(y.JSONSupport);return t.__decorate([a.property({type:Boolean,json:{write:!0}})],w.prototype,"ascending",void 0),t.__decorate([u.reader("ascending",["ascending","sortAscending"])],w.prototype,"readAscending",null),t.__decorate([a.property({type:g,json:{write:!0}})],w.prototype,"itemRenderingRule",void 0),t.__decorate([a.property({type:[o.Integer],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],w.prototype,"lockRasterIds",void 0),t.__decorate([a.property({type:String,json:{type:R.jsonValues,write:{target:"mosaicMethod",writer:R.write}}})],w.prototype,"method",void 0),t.__decorate([u.reader("method",["mosaicMethod","defaultMosaicMethod"])],w.prototype,"readMethod",null),t.__decorate([a.property({type:[h],json:{write:!0}})],w.prototype,"multidimensionalDefinition",void 0),t.__decorate([a.property({type:[o.Integer],json:{name:"fids",write:!0}})],w.prototype,"objectIds",void 0),t.__decorate([a.property({json:{type:v.jsonValues,read:{reader:v.read},write:{target:"mosaicOperation",writer:v.write}}})],w.prototype,"operation",void 0),t.__decorate([u.reader("operation",["mosaicOperation","mosaicOperator"])],w.prototype,"readOperation",null),t.__decorate([a.property({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],w.prototype,"sortField",void 0),t.__decorate([a.property({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],w.prototype,"sortValue",void 0),t.__decorate([s.cast("sortValue")],w.prototype,"castSortValue",null),t.__decorate([a.property({type:f,json:{write:!0}})],w.prototype,"viewpoint",void 0),t.__decorate([a.property({type:String,json:{write:!0}})],w.prototype,"where",void 0),w=_=t.__decorate([p.subclass("esri.layers.support.MosaicRule")],w),w}.apply(t,i))||(e.exports=n)},72675:(e,t,r)=>{var i,n;i=[r(58797),r(11285),r(74637),r(92231),r(73462),r(67059),r(26475),r(12187),r(59376),r(99752),r(25179),r(4037),r(51916),r(18377),r(56162)],void 0===(n=function(e,t,r,i,n,o,a,s,l,u,p,c,d,m,y){"use strict";var f;const h=new Set(["Raster","Raster2","DEM","FillRaster"]),g=new Set(["Rasters"]),_=e=>e&&e.rasterFunction?w.fromJSON(e):e,v=e=>e&&e instanceof w?e.toJSON():e;var R;!function(e){e[e.MOSAIC=0]="MOSAIC",e[e.GROUP=1]="GROUP",e[e.ITEM=2]="ITEM"}(R||(R={}));let w=f=function(t){function r(e){var r;return(r=t.call(this,e)||this).functionArguments=null,r.functionName=null,r.outputPixelType="unknown",r.variableName=null,r.description=null,r.functionDefinition=null,r.thumbnail=null,r}e._inheritsLoose(r,t);var n=r.prototype;return n.readFunctionArguments=function(e,t){return(e=>{if(null==e)return null;const t={};for(const r of Object.keys(e))h.has(r)?t[r]=_(e[r]):g.has(r)&&Array.isArray(e[r])?t[r]=e[r].map(_):t[r]=e[r];return t})(t.arguments||t.rasterFunctionArguments)},n.writeFunctionArguments=function(e,t,r){const i={};for(const t of Object.keys(e))h.has(t)?i[t]=v(e[t]):g.has(t)&&Array.isArray(e[t])?i[t]=e[t].map(v):i[t]=v(e[t]);this.functionDefinition?t.arguments=i:t[r]=i},n.readFunctionName=function(e,t){const r=t.rasterFunctionInfos;return t.name||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunction)},n.writeFunctionName=function(e,t,r){this.functionDefinition?t.name=e:t[r]=e},n.readFunctionType=function(e){return R[e]},n.writeFunctionType=function(e,t,r){t[r]=R[e]},n.clone=function(){return new f({functionName:this.functionName,functionArguments:i.clone(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})},r}(y.JSONSupport);return t.__decorate([a.property({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],w.prototype,"functionArguments",void 0),t.__decorate([l.reader("functionArguments",["rasterFunctionArguments","arguments"])],w.prototype,"readFunctionArguments",null),t.__decorate([p.writer("functionArguments")],w.prototype,"writeFunctionArguments",null),t.__decorate([a.property({json:{type:String,write:{target:"rasterFunction"}}})],w.prototype,"functionName",void 0),t.__decorate([l.reader("functionName",["rasterFunction","rasterFunctionInfos","name"])],w.prototype,"readFunctionName",null),t.__decorate([p.writer("functionName")],w.prototype,"writeFunctionName",null),t.__decorate([s.enumeration({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),a.property({json:{default:"unknown"}})],w.prototype,"outputPixelType",void 0),t.__decorate([a.property({type:String,json:{read:!0,write:!0}})],w.prototype,"variableName",void 0),t.__decorate([a.property({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],w.prototype,"description",void 0),t.__decorate([a.property({json:{origins:{"web-document":{read:!1,write:!1}}}})],w.prototype,"functionType",void 0),t.__decorate([l.reader("functionType")],w.prototype,"readFunctionType",null),t.__decorate([p.writer("functionType")],w.prototype,"writeFunctionType",null),t.__decorate([a.property({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],w.prototype,"functionDefinition",void 0),t.__decorate([a.property({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],w.prototype,"thumbnail",void 0),w=f=t.__decorate([u.subclass("esri.layers.support.RasterFunction")],w),w}.apply(t,i))||(e.exports=n)},23439:(e,t,r)=>{var i,n;i=[t,r(92231),r(74546),r(21936),r(38150),r(72675)],void 0===(n=function(e,r,i,n,o,a){"use strict";const s={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]},l={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},u=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function p(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?p(t.functionArguments):e}const c={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function d(e,t){const r=s[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function m(e){if(!e)return;const{fields:t}=e,r=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}t.combineRenderingRules=function(e,t){if(!e||!t)return r.clone(e||t);const i=r.clone(e);return"none"!==t.functionName.toLowerCase()&&(p(i.functionArguments).Raster=t),i},t.convertRendererToRenderingRule=function(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=new a;r.functionName="Stretch";const i=c[o.stretchTypeJSONDict.toJSON(e.stretchType)],s="u8",l={StretchType:i,Statistics:function(e){const t=[];return e.forEach((e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}})),t}(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(l.Min=e.outputMin),null!=e.outputMax&&(l.Max=e.outputMax),i===c.standardDeviation?(l.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=s):i===c.percentClip?(l.MinPercent=e.minPercent,l.MaxPercent=e.maxPercent,r.outputPixelType=s):i===c.minMax?r.outputPixelType=s:i===c.sigmoid&&(l.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=l,r.variableName="Raster",e.colorRamp){const i=e.colorRamp,o=new a,s=n.getColorRampName(i);return s?o.functionArguments={colorRamp:s}:!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type?o.functionArguments={colorRamp:e.colorRamp.toJSON()}:o.functionArguments={Colormap:n.convertColorRampToColormap(i,256)},o.variableName="Raster",o.functionName="Colormap",o.functionArguments.Raster=r,o}return r}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],n=[],o=[],s=1e-6,{pixelType:l,rasterAttributeTable:u}=t,p=u&&u.features,c=m(u);if(p&&Array.isArray(p)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{const i=t.symbol.color;let n;i.a&&p.forEach((a=>{n=a.attributes[e.field],(n>=t.minValue&&n<t.maxValue||r===e.classBreakInfos.length-1&&n>=t.minValue)&&o.push([a.attributes[c],i.r,i.g,i.b])}))}));const t=l?d(o,l):o,r=new a;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,r.variableName="Raster",r}e.classBreakInfos.forEach(((e,t)=>{const a=e.symbol&&e.symbol.color;a.a?(0===t?r.push(e.minValue,e.maxValue+s):r.push(e.minValue+s,e.maxValue+s),i.push(t),o.push([t,a.r,a.g,a.b])):n.push(e.minValue,e.maxValue)}));const y=l?d(o,l):o,f=new a;f.functionName="Remap",f.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:n},f.variableName="Raster";const h=new a;return h.functionName="Colormap",h.functionArguments={Colormap:y,Raster:f},h}(e,t);case"unique-value":return function(e,t){const r=[],{pixelType:i,rasterAttributeTable:n}=t,o=n&&n.features,s=m(n);let l=!1;if(e.uniqueValueInfos&&e.uniqueValueInfos.forEach((t=>{const i=t.symbol.color;i.a&&(e.field!==s&&o?o&&o.forEach((n=>{String(n.attributes[e.field])===String(t.value)&&r.push([n.attributes[s],i.r,i.g,i.b])})):isNaN(+t.value)?l=!0:r.push([+t.value,i.r,i.g,i.b]))})),l)return null;const u=i&&r.length>0?d(r,i):r,p=new a;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",p}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,n=i?d(r,i):r,o=new a;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=n,o}(e,t);case"vector-field":return function(e,t){const r=new a;r.functionName="VectorFieldRenderer";const{dataType:n,bandProperties:o}=t,s="vector-uv"===n;let u,p;o&&2===o.length&&(u=o.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),p=o.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==u&&null!==u||(u=0,p=1);const c="arithmetic"===e.rotationType?1:2,d="flow-from"===e.flowRepresentation?0:1,m=e.visualVariables?e.visualVariables.filter((e=>"Magnitude"===e.field))[0]:new i,y={magnitudeBandID:u,directionBandID:p,isUVComponents:s,referenceSystem:c,massFlowAngleRepresentation:d,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:l[e.style.toLowerCase().replace("-","_")],minimumMagnitude:m.minDataValue,maximumMagnitude:m.maxDataValue,minimumSymbolSize:m.minSize,maximumSymbolSize:m.maxSize};return r.functionArguments=y,r}(e,t);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new a;const r=new a;r.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,o="none"===e.scalingType?1:3,s={HillshadeType:i,SlopeType:o,ZFactor:e.zFactor};return 0===i&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===o&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),r.functionArguments=s,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",s.Colormap=n.convertColorRampToColormap(e.colorRamp,256)),r}(e,t)}},t.isSupportedRendererType=function(e){return u.has(e.type)},t.pixelTypeRanges=s,Object.defineProperty(e,"__esModule",{value:!0})}.apply(t,i))||(e.exports=n)},39718:(e,t,r)=>{var i,n;i=[t,r(3718),r(40810),r(2707),r(10419),r(11901)],void 0===(n=function(e,r,i,n,o,a){"use strict";async function s(e,t,i){const a=o.parseUrl(e),s=t.geometry?[t.geometry]:[],l=await n.normalizeCentralMeridian(s),u=t.toJSON();!function(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null!=t.end&&-1===r.indexOf(t.end)&&r.push(t.end),e.time=r.join(",")}}(u);const p=l&&l[0];r.isSome(p)&&(u.geometry=p.toJSON());const c=o.encode({...a.query,f:"json",...u});return o.asValidOptions(c,i)}t.computeHistograms=async function(e,t,r){const n=await s(e,t,r),a=o.parseUrl(e),{data:l}=await i(`${a.path}/computeHistograms`,n);return{histograms:l.histograms}},t.computeStatisticsHistograms=async function(e,t,r){const n=await s(e,t,r),a=o.parseUrl(e),{data:l}=await i(`${a.path}/computeStatisticsHistograms`,n),{statistics:u}=l;return null!=u&&u.length&&u.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:u,histograms:l.histograms}},t.identify=async function(e,t,s){const l=o.parseUrl(e),u=t.geometry?[t.geometry]:[];return n.normalizeCentralMeridian(u).then((e=>{const n=t.toJSON(),a=e&&e[0];r.isSome(a)&&(n.geometry=JSON.stringify(a.toJSON()));const u=o.encode({...l.query,f:"json",...n}),p=o.asValidOptions(u,s);return i(l.path+"/identify",p)})).then((e=>a.fromJSON(e.data)))},Object.defineProperty(e,"__esModule",{value:!0})}.apply(t,i))||(e.exports=n)},25294:(e,t,r)=>{var i,n;i=[r(58797),r(11285),r(74637),r(73462),r(67059),r(26475),r(99752),r(4037),r(51916),r(18377),r(27398),r(39718)],void 0===(n=function(e,t,r,i,n,o,a,s,l,u,p,c){"use strict";let d=function(t){function r(){return t.apply(this,arguments)||this}return e._inheritsLoose(r,t),r.prototype.execute=function(e,t){return c.identify(this.url,e,t)},r}(p);return d=t.__decorate([a.subclass("esri.tasks.ImageIdentifyTask")],d),d}.apply(t,i))||(e.exports=n)},58040:(e,t,r)=>{var i,n;i=[r(58797),r(11285),r(74637),r(92231),r(73462),r(67059),r(26475),r(99752),r(25179),r(4037),r(51916),r(18377),r(56162),r(35558),r(57167),r(62008),r(72675),r(6047)],void 0===(n=function(e,t,r,i,n,o,a,s,l,u,p,c,d,m,y,f,h,g){"use strict";var _;let v=_=function(t){function r(){var e;return(e=t.apply(this,arguments)||this).geometry=null,e.renderingRules=null,e.pixelSize=null,e.returnGeometry=!0,e.returnCatalogItems=!0,e.returnPixelValues=!0,e.maxItemCount=null,e.timeExtent=null,e.raster=void 0,e.viewId=void 0,e}e._inheritsLoose(r,t);var n=r.prototype;return n.writeGeometry=function(e,t,r){null!=e&&(t.geometryType=y.getJsonType(e),t[r]=JSON.stringify(e.toJSON()))},n.writeMosaicRule=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},n.writeRenderingRule=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))},n.writeRenderingRules=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))))},n.writePixelSize=function(e,t,r){null!=e&&(t[r]=JSON.stringify(e))},n.writeTimeExtent=function(e,t,r){if(null!=e){const i=e.start?e.start.getTime():null,n=e.end?e.end.getTime():null;t[r]=null!=i?null!=n?`${i},${n}`:`${i}`:null}},n.clone=function(){return new _(i.clone({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))},e._createClass(r,[{key:"mosaicRule",set:function(e){let t=e;t&&t.mosaicMethod&&(t=g.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}},{key:"renderingRule",set:function(e){let t=e;t&&t.rasterFunction&&(t=h.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}}]),r}(d.JSONSupport);return t.__decorate([a.property({json:{write:!0}})],v.prototype,"geometry",void 0),t.__decorate([l.writer("geometry")],v.prototype,"writeGeometry",null),t.__decorate([a.property({type:g,json:{write:!0}})],v.prototype,"mosaicRule",null),t.__decorate([l.writer("mosaicRule")],v.prototype,"writeMosaicRule",null),t.__decorate([a.property({type:h,json:{write:!0}})],v.prototype,"renderingRule",null),t.__decorate([l.writer("renderingRule")],v.prototype,"writeRenderingRule",null),t.__decorate([a.property({type:[h],json:{write:!0}})],v.prototype,"renderingRules",void 0),t.__decorate([l.writer("renderingRules")],v.prototype,"writeRenderingRules",null),t.__decorate([a.property({type:m,json:{write:!0}})],v.prototype,"pixelSize",void 0),t.__decorate([l.writer("pixelSize")],v.prototype,"writePixelSize",null),t.__decorate([a.property({type:Boolean,json:{write:!0}})],v.prototype,"returnGeometry",void 0),t.__decorate([a.property({type:Boolean,json:{write:!0}})],v.prototype,"returnCatalogItems",void 0),t.__decorate([a.property({type:Boolean,json:{write:!0}})],v.prototype,"returnPixelValues",void 0),t.__decorate([a.property({type:Number,json:{write:!0}})],v.prototype,"maxItemCount",void 0),t.__decorate([a.property({type:f,json:{write:{target:"time"}}})],v.prototype,"timeExtent",void 0),t.__decorate([l.writer("timeExtent")],v.prototype,"writeTimeExtent",null),t.__decorate([a.property({json:{write:!0}})],v.prototype,"raster",void 0),t.__decorate([a.property({json:{write:!0}})],v.prototype,"viewId",void 0),v=_=t.__decorate([s.subclass("esri.tasks.support.ImageIdentifyParameters")],v),v}.apply(t,i))||(e.exports=n)},11901:(e,t,r)=>{var i,n;i=[r(58797),r(11285),r(74637),r(73462),r(67059),r(26475),r(99752),r(4037),r(51916),r(18377),r(56162),r(35558),r(57517)],void 0===(n=function(e,t,r,i,n,o,a,s,l,u,p,c,d){"use strict";let m=function(t){function r(){var e;return(e=t.apply(this,arguments)||this).catalogItemVisibilities=null,e.catalogItems=null,e.location=null,e.name=null,e.objectId=null,e.processedValues=null,e.properties=null,e.value=null,e}return e._inheritsLoose(r,t),r}(p.JSONSupport);return t.__decorate([o.property({json:{write:!0}})],m.prototype,"catalogItemVisibilities",void 0),t.__decorate([o.property({type:d,json:{write:!0}})],m.prototype,"catalogItems",void 0),t.__decorate([o.property({type:c,json:{write:!0}})],m.prototype,"location",void 0),t.__decorate([o.property({json:{write:!0}})],m.prototype,"name",void 0),t.__decorate([o.property({json:{write:!0}})],m.prototype,"objectId",void 0),t.__decorate([o.property({json:{write:!0}})],m.prototype,"processedValues",void 0),t.__decorate([o.property({json:{write:!0}})],m.prototype,"properties",void 0),t.__decorate([o.property({json:{write:!0}})],m.prototype,"value",void 0),m=t.__decorate([a.subclass("esri.tasks.support.ImageIdentifyResult")],m),m}.apply(t,i))||(e.exports=n)}}]);