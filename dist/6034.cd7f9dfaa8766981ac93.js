(self.webpackChunkh2oc=self.webpackChunkh2oc||[]).push([[6034],{76034:(e,r,t)=>{var o,a;o=[t(58797),t(11285),t(74637),t(73462),t(67059),t(26475),t(59376),t(99752),t(4037),t(51916),t(18377),t(23084),t(12997),t(26016),t(82438),t(95791),t(64393),t(23704),t(87842),t(52058),t(93511),t(98757),t(56998)],void 0===(a=function(e,r,t,o,a,i,n,l,p,c,s,y,d,u,f,h,_,m,w,g,x,b,v){"use strict";let C=function(r){function t(e){var t;return(t=r.call(this,e)||this).capabilities={operations:{supportsEditing:!0}},t.legendEnabled=!1,t.lineGraphics=new v.default,t.opacity=1,t.pointGraphics=new v.default,t.polygonGraphics=new v.default,t.textGraphics=new v.default,t.type="map-notes",t}e._inheritsLoose(t,r);var o=t.prototype;return o.readFullExtent=function(e,r){if(!r.layers.length)return new d({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:y.WGS84});const t=y.fromJSON(r.layers[0].layerDefinition.spatialReference);return r.layers.reduce(((e,r)=>{const t=r.layerDefinition.extent;return t?d.fromJSON(t).union(e):e}),new d({spatialReference:t}))},o.readCapabilities=function(e,r){return{operations:{supportsEditing:!r.layers.some((e=>!!e.layerDefinition.drawingInfo))}}},o.readFeatureCollections=function(e,r,t){const o=r.layers.map((e=>{const r=new b;return r.read(e,t),r}));return new f({items:o})},o.readMinScale=function(e,r){for(const e of r.layers)if(null!=e.layerDefinition.minScale)return e.layerDefinition.minScale;return 0},o.readMaxScale=function(e,r){for(const e of r.layers)if(null!=e.layerDefinition.maxScale)return e.layerDefinition.maxScale;return 0},o.load=function(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)},o.read=function(e,t){"featureCollection"in e&&r.prototype.read.call(this,e.featureCollection,t),r.prototype.read.call(this,e,t)},t}(w.BlendLayer(x.ScaleRangeLayer(m.OperationalLayer(g.PortalLayer(_.MultiOriginJSONMixin(h))))));return r.__decorate([n.reader(["web-map","portal-item"],"fullExtent",["layers"])],C.prototype,"readFullExtent",null),r.__decorate([i.property({readOnly:!0})],C.prototype,"capabilities",void 0),r.__decorate([n.reader(["portal-item","web-map"],"capabilities",["layers"])],C.prototype,"readCapabilities",null),r.__decorate([i.property({readOnly:!0})],C.prototype,"featureCollections",void 0),r.__decorate([n.reader(["web-map","portal-item"],"featureCollections",["layers"])],C.prototype,"readFeatureCollections",null),r.__decorate([i.property({readOnly:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:!0}})],C.prototype,"legendEnabled",void 0),r.__decorate([i.property(v.graphicsCollectionProperty("lineGraphics"))],C.prototype,"lineGraphics",void 0),r.__decorate([i.property({type:["show","hide"]})],C.prototype,"listMode",void 0),r.__decorate([n.reader(["web-map","portal-item"],"minScale",["layers"])],C.prototype,"readMinScale",null),r.__decorate([n.reader(["web-map","portal-item"],"maxScale",["layers"])],C.prototype,"readMaxScale",null),r.__decorate([i.property({type:Number,json:{name:"opacity",write:!0}})],C.prototype,"opacity",void 0),r.__decorate([i.property(v.graphicsCollectionProperty("pointGraphics"))],C.prototype,"pointGraphics",void 0),r.__decorate([i.property(v.graphicsCollectionProperty("polygonGraphics"))],C.prototype,"polygonGraphics",void 0),r.__decorate([i.property(v.graphicsCollectionProperty("textGraphics"))],C.prototype,"textGraphics",void 0),r.__decorate([i.property({readOnly:!0,json:{read:!1}})],C.prototype,"type",void 0),C=r.__decorate([l.subclass("esri.layers.MapNotesLayer")],C),C}.apply(r,o))||(e.exports=a)}}]);