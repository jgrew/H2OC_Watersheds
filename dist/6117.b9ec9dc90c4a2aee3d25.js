(self.webpackChunkh2oc=self.webpackChunkh2oc||[]).push([[6117],{45173:(t,e,i)=>{var s,n;s=[i(58797),i(11285),i(74637),i(92231),i(3718),i(73462),i(26475),i(37055),i(99752),i(49359),i(4037),i(51916),i(18377),i(56162)],void 0===(n=function(t,e,i,s,n,l,r,o,a,h,f,c,p,u){"use strict";var x;const m=l.getLogger("esri.layers.support.PixelBlock");let d=x=function(e){function i(t){var i;return(i=e.call(this,t)||this).width=null,i.height=null,i.pixelType="f32",i.validPixelCount=null,i.mask=null,i.maskIsAlpha=!1,i.pixels=null,i.statistics=null,i}t._inheritsLoose(i,e),i.createEmptyBand=function(t,e){return new(x.getPixelArrayConstructor(t))(e)},i.getPixelArrayConstructor=function(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"u32":e=Uint32Array;break;case"f32":e=Float32Array;break;case"f64":e=Float64Array;break;case"c64":case"c128":case"unknown":e=Float32Array}return e};var l=i.prototype;return l.castPixelType=function(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].indexOf(e)>-1?e="u8":-1===["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].indexOf(e)&&(e="f32"),e},l.getPlaneCount=function(){return this.pixels&&this.pixels.length},l.addData=function(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new h("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})},l.getAsRGBA=function(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)},l.getAsRGBAFloat=function(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t},l.updateStatistics=function(){this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(t)for(let i=0;i<t.length;i++)t[i]&&e++;else e=this.width*this.height;this.validPixelCount=e},l.clamp=function(t){if(!t||"f64"===t||"f32"===t)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[i,s]=e,n=this.pixels,l=this.width*this.height,r=n.length;let o,a,h;const f=[];for(let e=0;e<r;e++){h=x.createEmptyBand(t,l),o=n[e];for(let t=0;t<l;t++)a=o[t],h[t]=a>s?s:a<i?i:a;f.push(h)}this.pixels=f,this.pixelType=t},l.extractBands=function(t){if(n.isNone(t)||0===t.length||null==this.pixels||0===this.pixels.length)return this;const e=this.pixels.length,i=t.some((t=>t>=this.pixels.length)),s=e===t.length&&!t.some(((t,e)=>t!==e));return i||s?this:new x({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>this.pixels[t])),statistics:this.statistics&&t.map((t=>this.statistics[t]))})},l.clone=function(){const t=new x({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const i=x.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const s=this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=s?this.pixels[e].slice(0,this.pixels[e].length):new i(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=s.clone(this.statistics[e]);return t},l._fillFrom8Bit=function(t){const{mask:e,maskIsAlpha:i,pixels:s}=this;if(!t||!s||!s.length)return void m.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let n,l,r,o;n=l=r=s[0],s.length>=3?(l=s[1],r=s[2]):2===s.length&&(l=s[1]);const a=new Uint32Array(t),h=this.width*this.height;if(n.length===h)if(e&&e.length===h)if(i)for(o=0;o<h;o++)e[o]&&(a[o]=e[o]<<24|r[o]<<16|l[o]<<8|n[o]);else for(o=0;o<h;o++)e[o]&&(a[o]=255<<24|r[o]<<16|l[o]<<8|n[o]);else for(o=0;o<h;o++)a[o]=255<<24|r[o]<<16|l[o]<<8|n[o];else m.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")},l._fillFromNon8Bit=function(t){const{pixels:e,mask:i,statistics:s}=this;if(!t||!e||!e.length)return void m.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const n=this.pixelType;let l=1,r=0,o=1;if(s&&s.length>0)r=s.map((t=>t.minValue)).reduce(((t,e)=>Math.min(t,e))),o=s.map((t=>t.maxValue-t.minValue)).reduce(((t,e)=>Math.max(t,e))),l=255/o;else{let t=255;"s8"===n?(r=-128,t=127):"u16"===n?t=65535:"s16"===n?(r=-32768,t=32767):"u32"===n?t=4294967295:"s32"===n?(r=-2147483648,t=2147483647):"f32"===n?(r=-34e38,t=34e38):"f64"===n&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-r)}const a=new Uint32Array(t),h=this.width*this.height;let f,c,p,u,x;if(f=c=p=e[0],f.length!==h)return m.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(c=e[1],e.length>=3&&(p=e[2]),i&&i.length===h)for(u=0;u<h;u++)i[u]&&(a[u]=255<<24|(p[u]-r)*l<<16|(c[u]-r)*l<<8|(f[u]-r)*l);else for(u=0;u<h;u++)a[u]=255<<24|(p[u]-r)*l<<16|(c[u]-r)*l<<8|(f[u]-r)*l;else if(i&&i.length===h)for(u=0;u<h;u++)x=(f[u]-r)*l,i[u]&&(a[u]=255<<24|x<<16|x<<8|x);else for(u=0;u<h;u++)x=(f[u]-r)*l,a[u]=255<<24|x<<16|x<<8|x},l._fillFrom32Bit=function(t){const{pixels:e,mask:i}=this;if(!t||!e||!e.length)return m.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let s,n,l,r;s=n=l=e[0],e.length>=3?(n=e[1],l=e[2]):2===e.length&&(n=e[1]);const o=this.width*this.height;if(s.length!==o)return m.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(i&&i.length===o)for(r=0;r<o;r++)t[a++]=s[r],t[a++]=n[r],t[a++]=l[r],t[a++]=1&i[r];else for(r=0;r<o;r++)t[a++]=s[r],t[a++]=n[r],t[a++]=l[r],t[a++]=1},l._calculateBandStatistics=function(t,e){let i=1/0,s=-1/0;const n=t.length;let l,r=0;if(e)for(l=0;l<n;l++)e[l]&&(r=t[l],i=r<i?r:i,s=r>s?r:s);else for(l=0;l<n;l++)r=t[l],i=r<i?r:i,s=r>s?r:s;return{minValue:i,maxValue:s}},i}(u.JSONSupport);return e.__decorate([r.property({json:{write:!0}})],d.prototype,"width",void 0),e.__decorate([r.property({json:{write:!0}})],d.prototype,"height",void 0),e.__decorate([r.property({json:{write:!0}})],d.prototype,"pixelType",void 0),e.__decorate([o.cast("pixelType")],d.prototype,"castPixelType",null),e.__decorate([r.property({json:{write:!0}})],d.prototype,"validPixelCount",void 0),e.__decorate([r.property({json:{write:!0}})],d.prototype,"mask",void 0),e.__decorate([r.property({json:{write:!0}})],d.prototype,"maskIsAlpha",void 0),e.__decorate([r.property({json:{write:!0}})],d.prototype,"pixels",void 0),e.__decorate([r.property({json:{write:!0}})],d.prototype,"statistics",void 0),d=x=e.__decorate([a.subclass("esri.layers.support.PixelBlock")],d),d}.apply(e,s))||(t.exports=n)},56117:(t,e,i)=>{var s,n;s=[e,i(45173)],void 0===(n=function(t,i){"use strict";const s=function(t){return t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0};function n(t,e){const i=Math.min(Math.max(t,-100),100),s=Math.min(Math.max(e,-100),100);let n,l;const r=new Uint8Array(256);for(n=0;n<256;n++)i>0&&i<100?l=(200*n-25500+510*s)/(2*(100-i))+128:i<=0&&i>-100?l=(200*n-25500+510*s)*(100+i)/2e4+128:100===i?(l=200*n-25500+256*(100-i)+510*s,l=l>0?255:0):-100===i&&(l=128),r[n]=l>255?255:l<0?0:l;return r}function l(t,e,i,s,n,l,r,o){return{xmin:n<=i*t?0:n<i*t+t?n-i*t:t,ymin:l<=s*e?0:l<s*e+e?l-s*e:e,xmax:n+r<=i*t?0:n+r<i*t+t?n+r-i*t:t,ymax:l+o<=s*e?0:l+o<s*e+e?l+o-s*e:e}}function r(t,e,n,r){const o=t.filter((t=>s(t)))[0];if(null==o)return null;const a=r?r.width:e.width,h=r?r.height:e.height,f=o.width,c=o.height,p=e.width/f,u=e.height/c,x=n?n.x:0,m=n?n.y:0,d=o.pixelType,y=i.getPixelArrayConstructor(d),g=o.pixels.length,w=[];let k,A,M,v,U,B,b,T,C,_,P,S,F;for(B=0;B<g;B++){for(A=new y(a*h),b=0;b<u;b++)for(T=0;T<p;T++)if(M=t[b*p+T],M)for(k=M.pixels[B],P=l(f,c,T,b,x,m,a,h),C=P.ymin;C<P.ymax;C++)for(v=(b*c+C-m)*a+(T*f-x),U=C*f,_=P.xmin;_<P.xmax;_++)A[v+_]=k[U+_];w.push(A)}if(t.some((t=>null==t||t.mask&&t.mask.length>0)))for(S=new Uint8Array(a*h),b=0;b<u;b++)for(T=0;T<p;T++)if(M=t[b*p+T],F=M?M.mask:null,P=l(f,c,T,b,x,m,a,h),F)for(C=P.ymin;C<P.ymax;C++)for(v=(b*c+C-m)*a+(T*f-x),U=C*f,_=P.xmin;_<P.xmax;_++)S[v+_]=F[U+_];else if(M)for(C=P.ymin;C<P.ymax;C++)for(v=(b*c+C-m)*a+(T*f-x),U=C*f,_=P.xmin;_<P.xmax;_++)S[v+_]=1;else for(C=P.ymin;C<P.ymax;C++)for(v=(b*c+C-m)*a+(T*f-x),U=C*f,_=P.xmin;_<P.xmax;_++)S[v+_]=0;const G=new i({width:a,height:h,pixels:w,pixelType:d,mask:S});return G.updateStatistics(),G}function o(t){if(!s(t))return null;const e=t.clone(),{width:i,height:n,pixels:l,mask:r}=t,o=l[0],c=e.pixels[0];for(let t=2;t<n-1;t++){const e=new Map;for(let s=t-2;s<t+2;s++)for(let t=0;t<4;t++){const n=s*i+t;f(e,o[n],r?r[n]:1)}c[t*i]=a(e),c[t*i+1]=c[t*i+2]=c[t*i];let s=3;for(;s<i-1;s++){let n=(t-2)*i+s+1;f(e,o[n],r?r[n]:1),n=(t-1)*i+s+1,f(e,o[n],r?r[n]:1),n=t*i+s+1,f(e,o[n],r?r[n]:1),n=(t+1)*i+s+1,f(e,o[n],r?r[n]:1),n=(t-2)*i+s-3,h(e,o[n],r?r[n]:1),n=(t-1)*i+s-3,h(e,o[n],r?r[n]:1),n=t*i+s-3,h(e,o[n],r?r[n]:1),n=(t+1)*i+s-3,h(e,o[n],r?r[n]:1),c[t*i+s]=a(e)}c[t*i+s+1]=c[t*i+s]}for(let t=0;t<i;t++)c[t]=c[i+t]=c[2*i+t],c[(n-1)*i+t]=c[(n-2)*i+t];return e.updateStatistics(),e}function a(t){if(0===t.size)return 0;let e=0,i=-1,s=0;const n=t.keys();let l=n.next();for(;!l.done;)s=t.get(l.value),s>e&&(i=l.value,e=s),l=n.next();return i}function h(t,e,i){if(0===i)return;const s=t.get(e);1===s?t.delete(e):t.set(e,s-1)}function f(t,e,i){0!==i&&t.set(e,t.has(e)?t.get(e)+1:1)}function c(t,e,n){let{x:l,y:r}=e;const{width:o,height:a}=n;if(0===l&&0===r&&a===t.height&&o===t.width)return t;const{width:h,height:f}=t,c=Math.max(0,r),p=Math.max(0,l),u=Math.min(l+o,h),x=Math.min(r+a,f);if(u<0||x<0||!s(t))return null;l=Math.max(0,-l),r=Math.max(0,-r);const{pixels:m,mask:d}=t,y=o*a,g=m.length,w=[];for(let e=0;e<g;e++){const s=m[e],n=i.createEmptyBand(t.pixelType,y);for(let t=c;t<x;t++){const e=t*h;let i=(t+r-c)*o+l;for(let t=p;t<u;t++)n[i++]=s[e+t]}w.push(n)}const k=new Uint8Array(y);for(let t=c;t<x;t++){const e=t*h;let i=(t+r-c)*o+l;for(let t=p;t<u;t++)k[i++]=d?d[e+t]:1}const A=new i({width:n.width,height:n.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function p(t,e=!0){if(!s(t))return null;const{pixels:n,width:l,height:r,mask:o,pixelType:a}=t,h=[],f=Math.round(l/2),c=Math.round(r/2),p=r-1,u=l-1;for(let t=0;t<n.length;t++){const s=n[t],o=i.createEmptyBand(a,f*c);let x=0;for(let t=0;t<r;t+=2)for(let i=0;i<l;i+=2){const n=s[t*l+i];if(e){const e=i===u?n:s[t*l+i+1],r=t===p?n:s[t*l+i+l],a=i===u?r:t===p?e:s[t*l+i+l+1];o[x++]=(n+e+r+a)/4}else o[x++]=n}h.push(o)}let x=null;if(o){x=new Uint8Array(f*c);let t=0;for(let i=0;i<r;i+=2)for(let s=0;s<l;s+=2){const n=o[i*l+s];if(e){const e=s===u?n:o[i*l+s+1],r=i===p?n:o[i*l+s+l],a=s===u?r:i===p?e:o[i*l+s+l+1];x[t++]=n*e*r*a?1:0}else x[t++]=n}}return new i({width:f,height:c,pixelType:a,pixels:h,mask:x})}e.approximateTransform=function(t,e,n,l,r="nearest"){if(!s(t))return null;"majority"===r&&(t=o(t));const{pixels:a,mask:h,pixelType:f}=t,c=t.width,p=t.height,u=i.getPixelArrayConstructor(f),x=a.length,{width:m,height:d}=e,y=l.cols,g=l.rows,w=Math.ceil(m/y),k=Math.ceil(d/g);let A,M,v,U,B,b,T,C=!1;for(let t=0;t<n.length;t+=3)-1===n[t]&&-1===n[t+1]&&-1===n[t+2]&&(C=!0);const _=new Float32Array(m*d),P=new Float32Array(m*d);let S,F,G=0;const I="majority"===r?0:.5;for(let t=0;t<k;t++)for(let e=0;e<w;e++){A=12*(t*w+e),M=n[A],v=n[A+1],U=n[A+2],B=n[A+3],b=n[A+4],T=n[A+5];for(let i=0;i<g;i++){G=(t*g+i)*m+e*y,F=(i+.5)/g;for(let t=0;t<i;t++)S=(t+.5)/y,_[G+t]=Math.round((M*S+v*F+U)*c-I),P[G+t]=Math.round((B*S+b*F+T)*p-I)}A+=6,M=n[A],v=n[A+1],U=n[A+2],B=n[A+3],b=n[A+4],T=n[A+5];for(let i=0;i<g;i++){G=(t*g+i)*m+e*y,F=(i+.5)/g;for(let t=i;t<y;t++)S=(t+.5)/y,_[G+t]=Math.round((M*S+v*F+U)*c-I),P[G+t]=Math.round((B*S+b*F+T)*p-I)}}const R=(t,e)=>{for(let i=0;i<d;i++){A=i*m;for(let i=0;i<m;i++)_[A]<0||P[A]<0?t[A]=0:t[A]=e[_[A]+P[A]*c],A++}},O=[];let j;for(let t=0;t<x;t++)j=new u(m*d),R(j,a[t]),O.push(j);const V=new i({width:m,height:d,pixelType:f,pixels:O});if(h)V.mask=new Uint8Array(m*d),R(V.mask,h);else if(C){V.mask=new Uint8Array(m*d);for(let t=0;t<m*d;t++)V.mask[t]=_[t]<0||P[t]<0?0:1}return V.updateStatistics(),V},e.clip=c,e.colorize=function(t,e){if(!s(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const i=t.clone(),n=i.pixels;let l=i.mask;const r=i.width*i.height;if(1!==n.length)return t;const{indexedColormap:o,indexed2DColormap:a,offset:h,alphaSpecified:f}=e,c=o.length-1;let p=0;const u=n[0],x=new Uint8Array(u.length),m=new Uint8Array(u.length),d=new Uint8Array(u.length);let y,g=0;if(o)if(l)for(p=0;p<r;p++)l[p]&&(g=4*(u[p]-h),g<h||g>c?l[p]=0:(x[p]=o[g],m[p]=o[g+1],d[p]=o[g+2],l[p]=o[g+3]));else{for(l=new Uint8Array(r),p=0;p<r;p++)g=4*(u[p]-h),g<h||g>c?l[p]=0:(x[p]=o[g],m[p]=o[g+1],d[p]=o[g+2],l[p]=o[g+3]);i.mask=l}else if(l)for(p=0;p<r;p++)l[p]&&(y=a[u[p]],x[p]=y[0],m[p]=y[1],d[p]=y[2],l[p]=y[3]);else{for(l=new Uint8Array(r),p=0;p<r;p++)y=a[u[p]],x[p]=y[0],m[p]=y[1],d[p]=y[2],l[p]=y[3];i.mask=l}return i.pixels=[x,m,d],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=f,i},e.createColormapLUT=function(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const i=e.sort(((t,e)=>t[0]-e[0]));let s=0;i[0][0]<0&&(s=i[0][0]);const n=Math.max(256,i[i.length-1][0]-s+1),l=new Uint8Array(4*n),r=[];let o,a=0,h=0;const f=5===i[0].length;if(n>65536)return i.forEach((t=>{r[t[0]-s]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:s,alphaSpecified:f};if(t.fillUnspecified)for(o=i[h],a=o[0]-s;a<n;a++)l[4*a]=o[1],l[4*a+1]=o[2],l[4*a+2]=o[3],l[4*a+3]=f?o[4]:255,a===o[0]-s&&(o=h===i.length-1?o:i[++h]);else for(a=0;a<i.length;a++)o=i[a],h=4*(o[0]-s),l[h]=o[1],l[h+1]=o[2],l[h+2]=o[3],l[h+3]=f?o[4]:255;return{indexedColormap:l,offset:s,alphaSpecified:f}},e.createContrastBrightnessLUT=n,e.createStretchLUT=function(t){const{minCutOff:e,maxCutOff:i,gamma:s,pixelType:l}=t,r=t.outMin||0,o=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(l))return null;const a=e.length;let h,f,c=0;"s8"===l?c=-127:"s16"===l&&(c=-32767);let p=256;["u16","s16"].indexOf(l)>-1&&(p=65536);const u=[],x=[],m=o-r;for(h=0;h<a;h++)x[h]=i[h]-e[h],u[h]=m/(i[h]-e[h]);const d=s&&s.length>=a,y=[];if(d)for(h=0;h<a;h++)s[h]>1?s[h]>2?y[h]=6.5+Math.pow(s[h]-2,2.5):y[h]=6.5+100*Math.pow(2-s[h],4):y[h]=1;let g;const w=[];let k,A,M;if(d)for(h=0;h<a;h++){for(M=[],f=0;f<p;f++)k=f+c,g=(k-e[h])/x[h],A=1,s[h]>1&&(A-=Math.pow(1/m,g*y[h])),k<i[h]&&k>e[h]?M[f]=Math.floor(A*m*Math.pow(g,1/s[h]))+r:k>=i[h]?M[f]=o:M[f]=r;w[h]=M}else for(h=0;h<a;h++){for(M=[],f=0;f<p;f++)k=f+c,k<=e[h]?M[f]=r:k>=i[h]?M[f]=o:M[f]=Math.floor((k-e[h])/x[h]*m)+r;w[h]=M}if(null!=t.contrastOffset){const e=n(t.contrastOffset,t.brightnessOffset);for(h=0;h<a;h++)for(M=w[h],f=0;f<p;f++)M[f]=e[M[f]]}return{lut:w,offset:c}},e.estimateStatisticsFromHistograms=function(t){const e=[];for(let i=0;i<t.length;i++){const{min:s,max:n,size:l,counts:r}=t[i];let o=0,a=0;for(let t=0;t<l;t++)o+=r[t],a+=t*r[t];const h=a/o;let f=0;for(let t=0;t<l;t++)f+=r[t]*Math.pow(t-h,2);const c=(n-s)/l,p=(h+.5)*c+s,u=Math.sqrt(f/(o-1))*c;e.push({min:s,max:n,avg:p,stddev:u})}return e},e.estimateStatisticsHistograms=function(t){if(!s(t))return null;t.statistics||t.updateStatistics();const{pixels:e,mask:i,pixelType:n,statistics:l}=t,r=t.width*t.height,o=e.length;let a,h,f,c,p;const u=[],x=[];let m,d,y,g,w,k,A,M,v,U;const B=256;for(c=0;c<o;c++){if(m=new Uint32Array(B),y=e[c],"u8"===n)if(a=-.5,h=255.5,i)for(p=0;p<r;p++)i[p]&&m[y[p]]++;else for(p=0;p<r;p++)m[y[p]]++;else{if(a=l[c].minValue,h=l[c].maxValue,f=(h-a)/B,d=new Uint32Array(257),i)for(p=0;p<r;p++)i[p]&&d[Math.floor((y[p]-a)/f)]++;else for(p=0;p<r;p++)d[Math.floor((y[p]-a)/f)]++;for(p=0;p<255;p++)m[p]=d[p];m[255]=d[255]+d[256]}for(u.push({min:a,max:h,size:B,counts:m}),g=0,w=0,M=0,p=0;p<B;p++)g+=m[p],w+=p*m[p];for(v=w/g,p=0;p<B;p++)M+=m[p]*Math.pow(p-v,2);U=Math.sqrt(M/(g-1)),f=(h-a)/B,k=(v+.5)*f+a,A=U*f,x.push({min:a,max:h,avg:k,stddev:A})}return{statistics:x,histograms:u}},e.extractBands=function(t,e){if(!e||!s(t))return t;const n=t.pixels.length;return e&&e.some((t=>t>=n))||1===n&&1===e.length&&0===e[0]?t:n!==e.length||e.some(((t,e)=>t!==e))?new i({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t},e.getClipBounds=l,e.lookupPixels=function(t,e){if(!s(t))return null;const{pixels:n,mask:l}=t,r=t.width*t.height,o=n.length;let a=e.lut;const{offset:h}=e;let f,c;a&&1===a[0].length&&(a=n.map((()=>a)));const p=[];let u,x,m;if(h)if(null==l)for(f=0;f<o;f++){for(u=n[f],x=a[f],m=new Uint8Array(r),c=0;c<r;c++)m[c]=x[u[c]-h];p.push(m)}else for(f=0;f<o;f++){for(u=n[f],x=a[f],m=new Uint8Array(r),c=0;c<r;c++)l[c]&&(m[c]=x[u[c]-h]);p.push(m)}else if(null==l)for(f=0;f<o;f++){for(u=n[f],x=a[f],m=new Uint8Array(r),c=0;c<r;c++)m[c]=x[u[c]];p.push(m)}else for(f=0;f<o;f++){for(u=n[f],x=a[f],m=new Uint8Array(r),c=0;c<r;c++)l[c]&&(m[c]=x[u[c]]);p.push(m)}const d=new i({width:t.width,height:t.height,pixels:p,mask:l,pixelType:"u8"});return d.updateStatistics(),d},e.mosaic=r,e.mosaicPixelData=function(t,e){if(!t||0===t.length)return null;const i=t.filter((t=>t.pixelBlock))[0];if(!i)return null;const s=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,n=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,l=.01*Math.min(s,n),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>l?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>l?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,o.map((t=>t.extent.xmin))),h=Math.min.apply(null,o.map((t=>t.extent.ymin))),f=Math.max.apply(null,o.map((t=>t.extent.xmax))),c=Math.max.apply(null,o.map((t=>t.extent.ymax))),p={x:Math.round((e.xmin-a)/s),y:Math.round((c-e.ymax)/n)},u={width:Math.round((f-a)/s),height:Math.round((c-h)/n)},x={width:Math.round((e.xmax-e.xmin)/s),height:Math.round((e.ymax-e.ymin)/n)};return Math.round(u.width/i.pixelBlock.width)*Math.round(u.height/i.pixelBlock.height)!==o.length||p.x<0||p.y<0||u.width<x.width||u.height<x.height?null:{extent:e,pixelBlock:r(o.map((t=>t.pixelBlock)),u,p,x)}},e.remapColor=function(t,e){if(!s(t))return null;const i=t.clone(),{pixels:n}=i,l=i.width*i.height,r=e.length,o=Math.floor(r/2),a=e[Math.floor(o)],h=n[0];let f,c,p,u,x,m,d=!1;const y=new Uint8Array(l),g=new Uint8Array(l),w=new Uint8Array(l);let k=i.mask;const A=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(l),k.fill(A?255:1),i.mask=k),x=0;x<l;x++)if(k[x]){for(f=h[x],d=!1,m=o,c=a,p=0,u=r-1;u-p>1;){if(f===c.value){d=!0;break}f>c.value?p=m:u=m,m=Math.floor((p+u)/2),c=e[Math.floor(m)]}d||(f===e[p].value?(c=e[p],d=!0):f===e[u].value?(c=e[u],d=!0):f<e[p].value?(d=!1,c=null):f>e[p].value&&(f<e[u].value?(c=e[p],d=!0):u===r-1?(d=!1,c=null):(c=e[u],d=!0))),d?(y[x]=c.mappedColor[0],g[x]=c.mappedColor[1],w[x]=c.mappedColor[2],k[x]=c.mappedColor[3]):y[x]=g[x]=w[x]=k[x]=0}return i.pixels=[y,g,w],i.mask=k,i.pixelType="u8",i.maskIsAlpha=A,i},e.resampleByMajority=o,e.setValidBoundary=function(t,e,i){if(!s(t))return null;const{width:n,height:l}=t,r=e.x,o=e.y,a=i.width+r,h=i.height+o;if(r<0||o<0||a>n||h>l)return t;if(0===r&&0===o&&a===n&&h===l)return t;t.mask||(t.mask=new Uint8Array(n*l));const f=t.mask;for(let t=0;t<l;t++){const e=t*n;for(let i=0;i<n;i++)f[e+i]=t<o||t>=h||i<r||i>=a?0:1}return t.updateStatistics(),t},e.split=function(t,e,i){if(!s(t))return null;const{width:n,height:l}=e;let{width:r,height:o}=t;const a=new Map,h={x:0,y:0},f=null==i?1:1+i;let u=t;for(let t=0;t<f;t++){const i=Math.ceil(r/n),s=Math.ceil(o/l);for(let r=0;r<s;r++){h.y=r*l;for(let s=0;s<i;s++){h.x=s*n;const i=c(u,h,e);a.set(`${t}/${r}/${s}`,i)}}t<f-1&&(u=p(u)),r=Math.round(r/2),o=Math.round(o/2)}return a},e.stretch=function(t,e){if(!s(t))return null;const i=t.clone(),{pixels:n,mask:l}=i,{minCutOff:r,maxCutOff:o,gamma:a}=e,h=e.outMin||0,f=e.outMax||255,c=i.width*i.height,p=n.length;let u,x,m,d,y;const g=f-h,w=[],k=[];for(u=0;u<p;u++)k[u]=o[u]-r[u],w[u]=g/(o[u]-r[u]);const A=a&&a.length>=p,M=[];if(A)for(u=0;u<p;u++)a[u]>1?a[u]>2?M[u]=6.5+Math.pow(a[u]-2,2.5):M[u]=6.5+100*Math.pow(2-a[u],4):M[u]=1;if(A)if(null!=l){for(x=0;x<c;x++)if(l[x])for(u=0;u<p;u++)m=n[u][x],y=(m-r[u])/k[u],d=1,a[u]>1&&(d-=Math.pow(1/g,y*M[u])),m<o[u]&&m>r[u]?n[u][x]=Math.floor(d*g*Math.pow(y,1/a[u]))+h:m>=o[u]?n[u][x]=f:n[u][x]=h}else for(x=0;x<c;x++)for(u=0;u<p;u++)m=n[u][x],y=(m-r[u])/k[u],d=1,a[u]>1&&(d-=Math.pow(1/g,y*M[u])),m<o[u]&&m>r[u]?n[u][x]=Math.floor(d*g*Math.pow(y,1/a[u]))+h:m>=o[u]?n[u][x]=f:n[u][x]=h;else if(null!=l){for(x=0;x<c;x++)if(l[x])for(u=0;u<p;u++)m=n[u][x],m<o[u]&&m>r[u]?n[u][x]=Math.floor((m-r[u])/k[u]*g)+h:m>=o[u]?n[u][x]=f:n[u][x]=h}else for(x=0;x<c;x++)for(u=0;u<p;u++)m=n[u][x],m<o[u]&&m>r[u]?n[u][x]=Math.floor((m-r[u])/k[u]*g)+h:m>=o[u]?n[u][x]=f:n[u][x]=h;return i.pixelType="u8",i.updateStatistics(),i},Object.defineProperty(t,"__esModule",{value:!0})}.apply(e,s))||(t.exports=n)}}]);