(self.webpackChunkh2oc=self.webpackChunkh2oc||[]).push([[3584],{23467:(e,r)=>{var t;void 0===(t=function(e){"use strict";let t=function(){function e(e={}){this._options=e}return e.prototype.toQueryParams=function(e){if(!e)return null;const r=e.toJSON(),t={};return Object.keys(r).forEach((e=>{const o=this._options[e];if(o){const s="boolean"!=typeof o&&o.name?o.name:e,i="boolean"!=typeof o&&o.getter?o.getter(r):r[e];null!=i&&(t[s]=(e=>{if(!Array.isArray(e))return!1;const[r]=e;return"number"==typeof r||"string"==typeof r})(i)?i.join(","):"object"==typeof i?JSON.stringify(i):i)}else t[e]=r[e]}),this),t},e}();r.createQueryParamsHelper=function(e){return new t(e)},Object.defineProperty(e,"__esModule",{value:!0})}.apply(r,[r]))||(e.exports=t)},73584:(e,r,t)=>{var o,s;o=[t(58797),t(11285),t(74637),t(73462),t(67059),t(26475),t(99752),t(4037),t(51916),t(18377),t(9720),t(40810),t(2707),t(27398),t(23467),t(98980),t(3864)],void 0===(s=function(e,r,t,o,s,i,n,a,p,l,u,c,d,y,f,m,v){"use strict";const h=f.createQueryParamsHelper({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});let _=function(r){function t(e){var t;return(t=r.call(this,e)||this).url=null,t}e._inheritsLoose(t,r);var o=t.prototype;return o.solve=function(e,r){const t=[],o=[],s={},i={};return e.incidents&&e.incidents.features&&this._collectGeometries(e.incidents.features,o,"incidents.features",s),e.facilities&&e.facilities.features&&this._collectGeometries(e.facilities.features,o,"facilities.features",s),e.pointBarriers&&e.pointBarriers.features&&this._collectGeometries(e.pointBarriers.features,o,"pointBarriers.features",s),e.polylineBarriers&&e.polylineBarriers.features&&this._collectGeometries(e.polylineBarriers.features,o,"polylineBarriers.features",s),e.polygonBarriers&&e.polygonBarriers.features&&this._collectGeometries(e.polygonBarriers.features,o,"polygonBarriers.features",s),d.normalizeCentralMeridian(o).then((e=>{for(const r in s){const o=s[r];t.push(r),i[r]=e.slice(o[0],o[1])}return this._isInputGeometryZAware(i,t)?this.getServiceDescription():u.resolve({dontCheck:!0})})).then((o=>{("dontCheck"in o?o.dontCheck:o.hasZ)||this._dropZValuesOffInputGeometry(i,t);for(const r in i)i[r].forEach(((t,o)=>{e.get(r)[o].geometry=t}));let s={query:{...this.parsedUrl.query,f:"json",...h.toQueryParams(e)}};return(this.requestOptions||r)&&(s={...this.requestOptions,...r,...s}),c(`${this.parsedUrl.path}/solveClosestFacility`,s)})).then((e=>v.fromJSON(e.data)))},o._collectGeometries=function(e,r,t,o){o[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))},t}(m.NAServiceDescriptionMixin(y));return r.__decorate([i.property()],_.prototype,"url",void 0),_=r.__decorate([n.subclass("esri.tasks.ClosestFacilityTask")],_),_}.apply(r,o))||(e.exports=s)},98980:(e,r,t)=>{var o,s;o=[r,t(58797),t(11285),t(74637),t(72885),t(3718),t(73462),t(67059),t(26475),t(99752),t(49359),t(4037),t(51916),t(18377),t(40810),t(27398)],void 0===(s=function(e,t,o,s,i,n,a,p,l,u,c,d,y,f,m,v){"use strict";const h=e=>{let r=function(e){function r(){return e.apply(this,arguments)||this}t._inheritsLoose(r,e);var o=r.prototype;return o.getServiceDescription=async function(){return this._serviceDescriptionPromise||(this._serviceDescriptionPromise=this._fetchServiceDescription()),this._serviceDescriptionPromise},o._fetchServiceDescription=async function(){if(!this.url||!this.parsedUrl)throw new c("network-service:missing-url","Url to Network service is missing");const e=this.url,{data:r}=await m(e,{query:{f:"json"}});r.supportedTravelModes||(r.supportedTravelModes=[]);for(let e=0;e<r.supportedTravelModes.length;e++)r.supportedTravelModes[e].id||(r.supportedTravelModes[e].id=r.supportedTravelModes[e].itemId);const t=r.currentVersion>=10.4?async function(e){try{const{data:{supportedTravelModes:r,defaultTravelMode:t}}=await m(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"}});return{supportedTravelModes:r,defaultTravelMode:t}}catch(e){throw new c("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e):async function(e){const{data:r}=await m(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json"}});if(!r||!r.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=r.owningSystemUrl;const{data:t}=await m(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"}}),o=i.getDeepValue("helperServices.routingUtilities.url",t);if(!o)return{supportedTravelModes:[],defaultTravelMode:null};const s=d.urlToObject(e),n=/\/solveClosestFacility$/.test(s.path)?"Route":/\/solveClosestFacility$/.test(s.path)?"ClosestFacility":"ServiceAreas",a=await m(o+("/"===o[o.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:n}}),p=[];let l=null;if(a&&a.data&&a.data.results&&a.data.results.length){const e=a.data.results;for(const r of e)if("supportedTravelModes"===r.paramName){if(r.value&&r.value.features)for(const{attributes:e}of r.value.features)if(e){const r=JSON.parse(e.TravelMode);p.push(r)}}else"defaultTravelMode"===r.paramName&&(l=r.value)}return{supportedTravelModes:p,defaultTravelMode:l}}(e),{defaultTravelMode:o,supportedTravelModes:s}=await t;return r.defaultTravelMode=o,r.supportedTravelModes=s,r},o._isInputGeometryZAware=function(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)if(n.isSome(e)&&e.hasZ)return!0}return!1},o._dropZValuesOffInputGeometry=function(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")},r}(e);return r=o.__decorate([u.subclass("esri.tasks.mixins.NAServiceDescription")],r),r};r.NAServiceDescription=function(e){function r(){return e.apply(this,arguments)||this}return t._inheritsLoose(r,e),r}(h(v)),r.NAServiceDescription=o.__decorate([u.subclass("esri.tasks.mixins.NAServiceDescription")],e.NAServiceDescription),r.NAServiceDescriptionMixin=h,Object.defineProperty(e,"__esModule",{value:!0})}.apply(r,o))||(e.exports=s)},3864:(e,r,t)=>{var o,s;o=[t(58797),t(11285),t(74637),t(3718),t(73462),t(67059),t(26475),t(59376),t(99752),t(4037),t(51916),t(18377),t(56162),t(23084),t(35558),t(50257),t(11446),t(26016),t(31099),t(57517),t(86924),t(45034)],void 0===(s=function(e,r,t,o,s,i,n,a,p,l,u,c,d,y,f,m,v,h,_,g,T,M){"use strict";function S(e){return g.fromJSON(e).features.map((e=>e.geometry))}let b=function(r){function t(e){var t;return(t=r.call(this,e)||this).directions=null,t.facilities=null,t.incidents=null,t.messages=null,t.pointBarriers=null,t.polylineBarriers=null,t.polygonBarriers=null,t.routes=null,t}e._inheritsLoose(t,r);var s=t.prototype;return s.readFacilities=function(e){return S(e)},s.readIncidents=function(e){return S(e)},s.readPointBarriers=function(e,r){return S(r.barriers)},s.readPolylineBarriers=function(e){return S(e)},s.readPolygonBarriers=function(e){return S(e)},s.readRoutes=function(e){return function(e){return e.features.map((r=>{const t=y.fromJSON(e.spatialReference),s=_.fromJSON(r);return o.isSome(s.geometry)&&(s.geometry.spatialReference=t),s}))}(e)},t}(d.JSONSupport);return r.__decorate([n.property({type:[T]})],b.prototype,"directions",void 0),r.__decorate([n.property({type:[f]})],b.prototype,"facilities",void 0),r.__decorate([a.reader("facilities")],b.prototype,"readFacilities",null),r.__decorate([n.property({type:[f]})],b.prototype,"incidents",void 0),r.__decorate([a.reader("incidents")],b.prototype,"readIncidents",null),r.__decorate([n.property({type:[M]})],b.prototype,"messages",void 0),r.__decorate([n.property({type:[f]})],b.prototype,"pointBarriers",void 0),r.__decorate([a.reader("pointBarriers",["barriers"])],b.prototype,"readPointBarriers",null),r.__decorate([n.property({type:[v]})],b.prototype,"polylineBarriers",void 0),r.__decorate([a.reader("polylineBarriers")],b.prototype,"readPolylineBarriers",null),r.__decorate([n.property({type:[m]})],b.prototype,"polygonBarriers",void 0),r.__decorate([a.reader("polygonBarriers")],b.prototype,"readPolygonBarriers",null),r.__decorate([n.property({type:[_]})],b.prototype,"routes",void 0),r.__decorate([a.reader("routes")],b.prototype,"readRoutes",null),b=r.__decorate([p.subclass("esri.tasks.support.ClosestFacilitySolveResult")],b),b}.apply(r,o))||(e.exports=s)},86924:(e,r,t)=>{var o,s;o=[t(58797),t(11285),t(74637),t(3718),t(73462),t(67059),t(26475),t(59376),t(99752),t(4037),t(51916),t(18377),t(23084),t(35558),t(12997),t(11446),t(26016),t(31099),t(57517)],void 0===(s=function(e,r,t,o,s,i,n,a,p,l,u,c,d,y,f,m,v,h,_){"use strict";let g=function(r){function t(e){var t;return(t=r.call(this,e)||this).extent=null,t.features=null,t.geometryType="polyline",t.routeId=null,t.routeName=null,t.totalDriveTime=null,t.totalLength=null,t.totalTime=null,t}e._inheritsLoose(t,r);var s=t.prototype;return s.readFeatures=function(e,r){(e||[]).forEach((e=>{this._decompressFeatureGeometry(e,r.summary.envelope.spatialReference)}));const t=d.fromJSON(r.spatialReference);return e.map((e=>{const r=h.fromJSON(e),s=e.geometry&&e.geometry.spatialReference;return r.geometry&&!s&&(o.unwrap(r.geometry).spatialReference=t),r.strings=e.strings,r.events=(e.events||[]).map((r=>{const t=new h({geometry:new y({x:r.point.x,y:r.point.y,z:r.point.z,hasZ:void 0!==r.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:r.ETA,arriveTimeUTC:r.arriveTimeUTC}});return t.strings=r.strings,t})),r}))},s._decompressFeatureGeometry=function(e,r){e.geometry=this._decompressGeometry(e.compressedGeometry,r)},s._decompressGeometry=function(e,r){let t=0,o=0,s=0,i=0;const n=[];let a,p,l,u,c,d,y,f,m=0,v=0,h=0;if(c=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),c||(c=[]),0===parseInt(c[m],32)){m=2;const e=parseInt(c[m],32);m++,d=parseInt(c[m],32),m++,1&e&&(v=c.indexOf("|")+1,y=parseInt(c[v],32),v++),2&e&&(h=c.indexOf("|",v)+1,f=parseInt(c[h],32),h++)}else d=parseInt(c[m],32),m++;for(;m<c.length&&"|"!==c[m];){a=parseInt(c[m],32)+t,m++,t=a,p=parseInt(c[m],32)+o,m++,o=p;const e=[a/d,p/d];v&&(u=parseInt(c[v],32)+s,v++,s=u,e.push(u/y)),h&&(l=parseInt(c[h],32)+i,h++,i=l,e.push(l/f)),n.push(e)}return{paths:[n],hasZ:v>0,hasM:h>0,spatialReference:r}},s._mergePolylinesToSinglePath=function(e,r){let t=[];(e||[]).forEach((e=>{e.paths.forEach((e=>{t=t.concat(e)}))}));const o=[];let s=[0,0];return t.forEach((e=>{e[0]===s[0]&&e[1]===s[1]||(o.push(e),s=e)})),new m({paths:[o]},r)},e._createClass(t,[{key:"mergedGeometry",get:function(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>o.unwrap(e))),r=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,r)}},{key:"strings",get:function(){return this.features.map((({strings:e})=>e))}}]),t}(_);return r.__decorate([n.property({type:f,json:{read:{source:"summary.envelope"}}})],g.prototype,"extent",void 0),r.__decorate([n.property()],g.prototype,"features",void 0),r.__decorate([a.reader("features")],g.prototype,"readFeatures",null),r.__decorate([n.property()],g.prototype,"geometryType",void 0),r.__decorate([n.property({readOnly:!0,dependsOn:["features","extent.spatialReference"]})],g.prototype,"mergedGeometry",null),r.__decorate([n.property()],g.prototype,"routeId",void 0),r.__decorate([n.property()],g.prototype,"routeName",void 0),r.__decorate([n.property({value:null,readOnly:!0,dependsOn:["features"]})],g.prototype,"strings",null),r.__decorate([n.property({json:{read:{source:"summary.totalDriveTime"}}})],g.prototype,"totalDriveTime",void 0),r.__decorate([n.property({json:{read:{source:"summary.totalLength"}}})],g.prototype,"totalLength",void 0),r.__decorate([n.property({json:{read:{source:"summary.totalTime"}}})],g.prototype,"totalTime",void 0),g=r.__decorate([p.subclass("esri.tasks.support.DirectionsFeatureSet")],g),g}.apply(r,o))||(e.exports=s)},78475:(e,r,t)=>{var o,s;o=[t(58797),t(11285),t(74637),t(73462),t(67059),t(26475),t(86928),t(99752),t(4037),t(51916),t(18377),t(56162)],void 0===(s=function(e,r,t,o,s,i,n,a,p,l,u,c){"use strict";const d=new n.JSONMap({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let y=function(r){function t(e){var t;return(t=r.call(this,e)||this).description=null,t.type=null,t}return e._inheritsLoose(t,r),t}(c.JSONSupport);return r.__decorate([i.property({type:String,json:{write:!0}})],y.prototype,"description",void 0),r.__decorate([i.property({type:String,json:{read:d.read,write:d.write}})],y.prototype,"type",void 0),y=r.__decorate([a.subclass("esri.tasks.support.GPMessage")],y),y}.apply(r,o))||(e.exports=s)},45034:(e,r,t)=>{var o,s;o=[t(58797),t(11285),t(74637),t(73462),t(67059),t(26475),t(86928),t(99752),t(4037),t(51916),t(18377),t(78475)],void 0===(s=function(e,r,t,o,s,i,n,a,p,l,u,c){"use strict";const d=new n.JSONMap({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let y=function(r){function t(e){var t;return(t=r.call(this,e)||this).type=null,t}return e._inheritsLoose(t,r),t}(c);return r.__decorate([i.property({type:String,json:{read:d.read,write:d.write}})],y.prototype,"type",void 0),y=r.__decorate([a.subclass("esri.tasks.support.NAMessage")],y),y}.apply(r,o))||(e.exports=s)}}]);