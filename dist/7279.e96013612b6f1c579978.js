(self.webpackChunkh2oc=self.webpackChunkh2oc||[]).push([[7279],{47279:(e,t,n)=>{var i,r;i=[n(49359),n(9720),n(56750),n(57167),n(12808),n(40810),n(13213),n(16985),n(97949),n(79043),n(58641),n(21863),n(7604),n(28405),n(51497)],void 0===(r=function(e,t,n,i,r,s,o,u,l,a,c,d,f,p,y){"use strict";const h={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};return function(){function m(){this._queryEngine=null}var g=m.prototype;return g.destroy=function(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null},g.load=async function(t){const i=[];await this._checkProjection(t.spatialReference);let y=null;t.url&&(y=(await s(t.url,{responseType:"json"})).data,await c.validateGeoJSON(y));const m=c.inferLayerProperties(y,{geometryType:t.geometryType}),g=t.fields||m.fields||[],F=null!=t.hasZ?t.hasZ:m.hasZ,b=m.geometryType,I=t.objectIdField||("number"===m.objectIdFieldType?m.objectIdFieldName:"OBJECTID")||"OBJECTID",E=t.spatialReference||n.WGS84;let j=t.timeInfo;if(!b)throw new e("geojson-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if("string"===m.objectIdFieldType&&i.push({name:"geojson-layer:unsupported-id-type",message:"Feature ids are of type string and can't be honored."}),g===m.fields&&m.unknownFields.length>0&&i.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:m.unknownFields}}),I){let e=null;g.some((t=>t.name===I&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):g.unshift({alias:I,name:I,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const t of g){if(null==t.name&&(t.name=t.alias),null==t.alias&&(t.alias=t.name),!t.name)throw new e("geojson-layer:invalid-field-name","field name is missing",{field:t});if(t.name===I&&(t.type="esriFieldTypeOID"),-1===o.kebabDict.jsonValues.indexOf(t.type))throw new e("geojson-layer:invalid-field-type",`invalid type for field "${t.name}"`,{field:t})}const _={};this._requiredFields=[];for(const e of g)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable;const t=r.getFieldDefaultValue(e);e.nullable||void 0!==t?_[e.name]=t:this._requiredFields.push(e)}if(this._fieldsIndex=new l(g),j){if(j.startTimeField){const e=this._fieldsIndex.get(j.startTimeField);e?(j.startTimeField=e.name,e.type="esriFieldTypeDate"):j.startTimeField=null}if(j.endTimeField){const e=this._fieldsIndex.get(j.endTimeField);e?(j.endTimeField=e.name,e.type="esriFieldTypeDate"):j.endTimeField=null}if(j.trackIdField){const e=this._fieldsIndex.get(j.trackIdField);e?j.trackIdField=e.name:(j.trackIdField=null,i.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:j}}))}j.startTimeField||j.endTimeField||(i.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:j}}),j=null)}const w={warnings:i,featureErrors:[],layerDefinition:{...h,drawingInfo:d.createDrawingInfo(b),templates:d.createDefaultTemplate(_),extent:null,geometryType:b,objectIdField:I,fields:g,hasZ:!!F,timeInfo:j}};this._queryEngine=new p.default({fields:g,geometryType:b,hasM:!1,hasZ:F,objectIdField:I,spatialReference:E,timeInfo:j,featureStore:new f({geometryType:b,hasM:!1,hasZ:F})}),this._createDefaultAttributes=d.createDefaultAttributesFunction(_,I),this._nextObjectId=m.maxObjectId+1;const T=c.createOptimizedFeatures(y,{geometryType:b,hasZ:F,objectIdFieldName:"number"===m.objectIdFieldType?I:null});if(!n.equals(E,n.WGS84))for(const e of T)e.geometry&&(e.geometry=u.convertFromGeometry(a.project(u.convertToGeometry(e.geometry,b,F,!1),n.WGS84,E)));return this._loadInitialFeatures(w,T),w},g.applyEdits=async function(e){const{spatialReference:n,geometryType:i}=this._queryEngine;return await t.all([y.loadGeometryEngineForSimplify(n,i),a.checkProjectionSupport(e.adds,n),a.checkProjectionSupport(e.updates,n)]),this._applyEdits(e)},g.queryFeatures=async function(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)},g.queryFeatureCount=async function(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)},g.queryObjectIds=async function(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)},g.queryExtent=async function(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)},g._loadInitialFeatures=function(e,t){const{featureStore:n,objectIdField:i}=this._queryEngine,r=[];for(const n of t){const t=this._createDefaultAttributes(),s=y.mixAttributes(this._fieldsIndex,this._requiredFields,t,n.attributes,!0,e.warnings);s?e.featureErrors.push(s):(this._assignObjectId(t,n.attributes,!0),n.attributes=t,n.objectId=t[i],r.push(n))}if(n.addMany(r),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:n}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,n]}return e},g._applyEdits=function(e){const{adds:t,updates:n,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),n&&n.length&&this._applyUpdateEdits(r,n),i&&i.length){for(const e of i)r.deleteResults.push(y.createFeatureEditSuccessResult(e));this._queryEngine.featureStore.removeManyById(i)}return{fullExtent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:r}},g._applyAddEdits=function(e,t){const{addResults:n}=e,{geometryType:r,hasM:s,hasZ:o,objectIdField:l,spatialReference:c,featureStore:d}=this._queryEngine,f=[];for(const s of t){if(s.geometry&&r!==i.getJsonType(s.geometry)){n.push(y.createFeatureEditErrorResult("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),o=y.mixAttributes(this._fieldsIndex,this._requiredFields,t,s.attributes);if(o)n.push(o);else{if(this._assignObjectId(t,s.attributes),s.attributes=t,null!=s.uid){const t=s.attributes[l];e.uidToObjectId[s.uid]=t}s.geometry&&(s.geometry=a.project(y.simplify(s.geometry,c),s.geometry.spatialReference,c)),f.push(s),n.push(y.createFeatureEditSuccessResult(s.attributes[l]))}}d.addMany(u.convertFromFeatures([],f,r,o,s,l))},g._applyUpdateEdits=function({updateResults:e},t){const{geometryType:n,hasM:r,hasZ:s,objectIdField:o,spatialReference:l,featureStore:c}=this._queryEngine;for(const d of t){const{attributes:t,geometry:f}=d,p=t&&t[o];if(null==p){e.push(y.createFeatureEditErrorResult(`Identifier field ${o} missing`));continue}if(!c.has(p)){e.push(y.createFeatureEditErrorResult(`Feature with object id ${p} missing`));continue}const h=u.convertToFeature(c.getFeature(p),n,s,r);if(f){if(n!==i.getJsonType(f)){e.push(y.createFeatureEditErrorResult("Incorrect geometry type."));continue}h.geometry=a.project(y.simplify(f,l),f.spatialReference,l)}if(t){const n=y.mixAttributes(this._fieldsIndex,this._requiredFields,h.attributes,t);if(n){e.push(n);continue}}c.add(u.convertFromFeature(h,n,s,r,o)),e.push(y.createFeatureEditSuccessResult(p))}},g._assignObjectId=function(e,t,n=!1){const i=this._queryEngine.objectIdField;n&&isFinite(t[i])?e[i]=t[i]:e[i]=this._nextObjectId++},g._checkProjection=async function(t){try{await a.checkProjectionSupport(n.WGS84,t)}catch{throw new e("geojson-layer","Projection not supported")}},m}()}.apply(t,i))||(e.exports=r)},58641:(e,t,n)=>{var i,r;i=[t,n(49359),n(5691),n(87547)],void 0===(r=function(e,n,i,r){"use strict";function s(e){const t=[];return e.forEach((e=>t.push(e))),t}const o={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function*u(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*l(e){if(!e)return null;switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function a(e){for(;;){const{value:t,done:n}=e.next();if(n)return!1;if(t.length>2)return!0}}function c(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n],r=e[(n+1)%e.length];t+=i[0]*r[1]-r[0]*i[1]}return t<=0}function d(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function f(e,t,n){switch(t.type){case"LineString":return function(e,t,n){return h(e,t.coordinates,n),e}(e,t,n);case"MultiLineString":return function(e,t,n){for(const i of t.coordinates)h(e,i,n);return e}(e,t,n);case"MultiPoint":return function(e,t,n){return h(e,t.coordinates,n),e}(e,t,n);case"MultiPolygon":return function(e,t,n){for(const i of t.coordinates){p(e,i[0],n);for(let t=1;t<i.length;t++)y(e,i[t],n)}return e}(e,t,n);case"Point":return function(e,t,n){return g(e,t.coordinates,n),e}(e,t,n);case"Polygon":return function(e,t,n){const i=t.coordinates;p(e,i[0],n);for(let t=1;t<i.length;t++)y(e,i[t],n);return e}(e,t,n)}}function p(e,t,n){const i=d(t);c(i)?h(e,i,n):m(e,i,n)}function y(e,t,n){const i=d(t);c(i)?m(e,i,n):h(e,i,n)}function h(e,t,n){for(const i of t)g(e,i,n);e.lengths.push(t.length)}function m(e,t,n){for(let i=t.length-1;i>=0;i--)g(e,t[i],n);e.lengths.push(t.length)}function g(e,t,n){const[i,r,s]=t;e.coords.push(i,r),n.hasZ&&e.coords.push(s||0)}function F(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}t.createOptimizedFeatures=function(e,t){return function(e){const t=[];for(;;){const{value:n,done:i}=e.next();if(i)return t;t.push(n)}}(function*(e,t={}){const{geometryType:n,objectIdFieldName:s}=t;for(;;){const{value:u,done:l}=e.next();if(l)return;const{geometry:a,properties:c,id:d}=u;if(a&&o[a.type]!==n)continue;const p=c||{};s&&null!=d&&!p[s]&&(p[s]=d);const y=new i(a?f(new r,a,t):null,p);yield y}}(u(e),t))},t.inferLayerProperties=function(e,t={}){const n=u(e),i=[],r=new Set,c=new Set;let d,f=!1,p=Number.NEGATIVE_INFINITY,y=null,h=!1,{geometryType:m=null}=t,g=!1;for(;;){const{value:e,done:t}=n.next();if(t){const e=y&&1===y.length&&y[0]||null;if(e)for(const t of i)t.name===e&&(t.type="esriFieldTypeOID");return{fields:i,geometryType:m,hasZ:f,maxObjectId:Math.max(0,p),objectIdFieldName:e,objectIdFieldType:d,unknownFields:s(c)}}const{geometry:u,properties:b,id:I}=e;if((!u||(m||(m=o[u.type]),o[u.type]===m))&&(f||(f=a(l(u))),h||(h=null!=I,h&&(d=typeof I,"number"===d&&(y=Object.keys(b).filter((e=>b[e]===I))))),h&&"number"===d&&null!=I&&(p=Math.max(p,I),y.length>1?y=y.filter((e=>b[e]===I)):1===y.length&&(y=b[y[0]]===I?y:[])),!g&&b)){let e=!0;for(const t in b){if(r.has(t))continue;const n=b[t];if(null==n){e=!1,c.add(t);continue}const s=F(n);"unknown"!==s?(c.delete(t),r.add(t),i.push({name:t,alias:t,type:s})):c.add(t)}g=e}}},t.validateGeoJSON=function(e){if(!e)throw new n("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new n("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:t}=e;if(!t)return;const i="string"==typeof t?t:"name"===t.type?t.properties.name:null,r=new RegExp(".*(CRS84H?|4326)$","i");if(!i||!r.test(i))throw new n("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:t})},Object.defineProperty(e,"__esModule",{value:!0})}.apply(t,i))||(e.exports=r)},51497:(e,t,n)=>{var i,r;i=[n,t,n(56750),n(12808)],void 0===(r=function(e,i,r,s){"use strict";let o=function(){this.code=null,this.description=null},u=function(e){this.error=new o,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e};function l(e){return new u(e)}let a=function(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e};const c=new Set;function d(e,t){let n=t;return"string"==typeof t&&s.isNumericField(e)?n=parseFloat(t):null!=t&&s.isStringField(e)&&"string"!=typeof t&&(n=String(t)),s.sanitizeNullFieldValue(n)}let f;async function p(){return f||(f=await new Promise((function(e,t){Promise.all([n.e(4095),n.e(2215)]).then(function(){var t=[n(32215)];e.apply(null,t)}.bind(this)).catch(t.bind(this))})),f)}t.createFeatureEditErrorResult=l,t.createFeatureEditSuccessResult=function(e){return new a(e)},t.loadGeometryEngine=p,t.loadGeometryEngineForSimplify=async function(e,t){!r.isValid(e)||"esriGeometryPolygon"!==t&&"esriGeometryPolyline"!==t||await p()},t.mixAttributes=function(e,t,n,i,r=!1,o){c.clear();for(const t in i){const u=e.get(t);if(!u)continue;const a=i[t],f=d(u,a);if(f!==a&&o&&o.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:u,originalValue:a,sanitizedValue:f}}),c.add(u.name),u&&(r||u.editable)){const e=s.validateFieldValue(u,f);if(e)return l(s.validationErrorToString(e,u,f));n[u.name]=f}}for(const e of t)if(!c.has(e.name))return l(`missing required field "${e.name}"`);return null},t.simplify=function(e,t){if(!e||!r.isValid(t))return e;if("rings"in e||"paths"in e){if(!f)throw new TypeError("geometry engine not loaded");return f.simplify(t,e)}return e},Object.defineProperty(i,"__esModule",{value:!0})}.apply(t,i))||(e.exports=r)}}]);