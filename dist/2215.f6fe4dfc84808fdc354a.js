(self.webpackChunkh2oc=self.webpackChunkh2oc||[]).push([[2215],{48063:(e,n,t)=>{var r,i;r=[n,t(84095),t(115)],void 0===(i=function(e,t,r){"use strict";function i(e){return t.geometryEngineBase$1.extendedSpatialReferenceInfo(e)}function o(e,n,i){return t.geometryEngineBase$1.clip(r.jsonAdapter,e,n,i)}function s(e,n,i){return t.geometryEngineBase$1.cut(r.jsonAdapter,e,n,i)}function a(e,n,i){return t.geometryEngineBase$1.contains(r.jsonAdapter,e,n,i)}function c(e,n,i){return t.geometryEngineBase$1.crosses(r.jsonAdapter,e,n,i)}function f(e,n,i,o){return t.geometryEngineBase$1.distance(r.jsonAdapter,e,n,i,o)}function u(e,n,i){return t.geometryEngineBase$1.equals(r.jsonAdapter,e,n,i)}function g(e,n,i){return t.geometryEngineBase$1.intersects(r.jsonAdapter,e,n,i)}function l(e,n,i){return t.geometryEngineBase$1.touches(r.jsonAdapter,e,n,i)}function p(e,n,i){return t.geometryEngineBase$1.within(r.jsonAdapter,e,n,i)}function d(e,n,i){return t.geometryEngineBase$1.disjoint(r.jsonAdapter,e,n,i)}function m(e,n,i){return t.geometryEngineBase$1.overlaps(r.jsonAdapter,e,n,i)}function y(e,n,i,o){return t.geometryEngineBase$1.relate(r.jsonAdapter,e,n,i,o)}function A(e,n){return t.geometryEngineBase$1.isSimple(r.jsonAdapter,e,n)}function E(e,n){return t.geometryEngineBase$1.simplify(r.jsonAdapter,e,n)}function B(e,n,i=!1){return t.geometryEngineBase$1.convexHull(r.jsonAdapter,e,n,i)}function j(e,n,i){return t.geometryEngineBase$1.difference(r.jsonAdapter,e,n,i)}function $(e,n,i){return t.geometryEngineBase$1.symmetricDifference(r.jsonAdapter,e,n,i)}function h(e,n,i){return t.geometryEngineBase$1.intersect(r.jsonAdapter,e,n,i)}function x(e,n,i=null){return t.geometryEngineBase$1.union(r.jsonAdapter,e,n,i)}function v(e,n,i,o,s,a,c){return t.geometryEngineBase$1.offset(r.jsonAdapter,e,n,i,o,s,a,c)}function V(e,n,i,o,s=!1){return t.geometryEngineBase$1.buffer(r.jsonAdapter,e,n,i,o,s)}function w(e,n,i,o,s,a,c){return t.geometryEngineBase$1.geodesicBuffer(r.jsonAdapter,e,n,i,o,s,a,c)}function z(e,n,i,o=!0){return t.geometryEngineBase$1.nearestCoordinate(r.jsonAdapter,e,n,i,o)}function S(e,n,i){return t.geometryEngineBase$1.nearestVertex(r.jsonAdapter,e,n,i)}function D(e,n,i,o,s){return t.geometryEngineBase$1.nearestVertices(r.jsonAdapter,e,n,i,o,s)}function H(e,n,r,i){if(null==n||null==i)throw new Error("Illegal Argument Exception");const o=t.geometryEngineBase$1.rotate(n,r,i);return o.spatialReference=e,o}function L(e,n,r){if(null==n||null==r)throw new Error("Illegal Argument Exception");const i=t.geometryEngineBase$1.flipHorizontal(n,r);return i.spatialReference=e,i}function b(e,n,r){if(null==n||null==r)throw new Error("Illegal Argument Exception");const i=t.geometryEngineBase$1.flipVertical(n,r);return i.spatialReference=e,i}function I(e,n,i,o,s){return t.geometryEngineBase$1.generalize(r.jsonAdapter,e,n,i,o,s)}function R(e,n,i,o){return t.geometryEngineBase$1.densify(r.jsonAdapter,e,n,i,o)}function C(e,n,i,o,s=0){return t.geometryEngineBase$1.geodesicDensify(r.jsonAdapter,e,n,i,o,s)}function _(e,n,i){return t.geometryEngineBase$1.planarArea(r.jsonAdapter,e,n,i)}function q(e,n,i){return t.geometryEngineBase$1.planarLength(r.jsonAdapter,e,n,i)}function k(e,n,i,o){return t.geometryEngineBase$1.geodesicArea(r.jsonAdapter,e,n,i,o)}function O(e,n,i,o){return t.geometryEngineBase$1.geodesicLength(r.jsonAdapter,e,n,i,o)}var J=Object.freeze({__proto__:null,extendedSpatialReferenceInfo:i,clip:o,cut:s,contains:a,crosses:c,distance:f,equals:u,intersects:g,touches:l,within:p,disjoint:d,overlaps:m,relate:y,isSimple:A,simplify:E,convexHull:B,difference:j,symmetricDifference:$,intersect:h,union:x,offset:v,buffer:V,geodesicBuffer:w,nearestCoordinate:z,nearestVertex:S,nearestVertices:D,rotate:H,flipHorizontal:L,flipVertical:b,generalize:I,densify:R,geodesicDensify:C,planarArea:_,planarLength:q,geodesicArea:k,geodesicLength:O});n.buffer=V,n.clip=o,n.contains=a,n.convexHull=B,n.crosses=c,n.cut=s,n.densify=R,n.difference=j,n.disjoint=d,n.distance=f,n.equals=u,n.extendedSpatialReferenceInfo=i,n.flipHorizontal=L,n.flipVertical=b,n.generalize=I,n.geodesicArea=k,n.geodesicBuffer=w,n.geodesicDensify=C,n.geodesicLength=O,n.geometryEngineJSON=J,n.intersect=h,n.intersects=g,n.isSimple=A,n.nearestCoordinate=z,n.nearestVertex=S,n.nearestVertices=D,n.offset=v,n.overlaps=m,n.planarArea=_,n.planarLength=q,n.relate=y,n.rotate=H,n.simplify=E,n.symmetricDifference=$,n.touches=l,n.union=x,n.within=p}.apply(n,r))||(e.exports=i)},32215:(e,n,t)=>{var r,i;r=[n,t(84095),t(115),t(48063)],void 0===(i=function(e,t,r,i){"use strict";n.buffer=i.buffer,n.clip=i.clip,n.contains=i.contains,n.convexHull=i.convexHull,n.crosses=i.crosses,n.cut=i.cut,n.densify=i.densify,n.difference=i.difference,n.disjoint=i.disjoint,n.distance=i.distance,n.equals=i.equals,n.extendedSpatialReferenceInfo=i.extendedSpatialReferenceInfo,n.flipHorizontal=i.flipHorizontal,n.flipVertical=i.flipVertical,n.generalize=i.generalize,n.geodesicArea=i.geodesicArea,n.geodesicBuffer=i.geodesicBuffer,n.geodesicDensify=i.geodesicDensify,n.geodesicLength=i.geodesicLength,n.intersect=i.intersect,n.intersects=i.intersects,n.isSimple=i.isSimple,n.nearestCoordinate=i.nearestCoordinate,n.nearestVertex=i.nearestVertex,n.nearestVertices=i.nearestVertices,n.offset=i.offset,n.overlaps=i.overlaps,n.planarArea=i.planarArea,n.planarLength=i.planarLength,n.relate=i.relate,n.rotate=i.rotate,n.simplify=i.simplify,n.symmetricDifference=i.symmetricDifference,n.touches=i.touches,n.union=i.union,n.within=i.within,Object.defineProperty(e,"__esModule",{value:!0})}.apply(n,r))||(e.exports=i)}}]);