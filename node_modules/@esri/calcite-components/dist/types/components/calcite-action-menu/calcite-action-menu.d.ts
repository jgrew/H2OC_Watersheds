import { VNode } from "../../stencil-public-runtime";
import { PopperPlacement } from "../../utils/popper";
import { Placement } from "@popperjs/core";
/**
 * @slot - A slot for adding `calcite-action`s.
 */
export declare class CalciteActionMenu {
  connectedCallback(): void;
  disconnectedCallback(): void;
  /**
   * Indicates whether widget is expanded.
   */
  expanded: boolean;
  expandedHandler(): void;
  /**
   * Defines the available placements that can be used when a flip occurs.
   */
  flipPlacements?: Placement[];
  /**
   * 'Options' text string for the actions menu.
   */
  intlOptions?: string;
  /**
   * Offset the position of the menu away from the reference element.
   */
  offsetDistance: number;
  /**
   * Opens the action menu.
   */
  open: boolean;
  /**
   * Determines where the component will be positioned relative to the referenceElement.
   */
  placement: PopperPlacement;
  el: HTMLCalciteActionMenuElement;
  menuFocusTimeout: number;
  menuButtonEl: HTMLCalciteActionElement;
  menuEl: HTMLDivElement;
  actionElements: HTMLCalciteActionElement[];
  mutationObserver: MutationObserver;
  guid: string;
  menuId: string;
  menuButtonId: string;
  activeMenuItemIndex: number;
  activeMenuItemIndexHandler(): void;
  renderMenuButton(): VNode;
  renderMenuItems(): VNode;
  render(): VNode;
  menuButtonClick: () => void;
  setMenuButtonRef: (node: HTMLCalciteActionElement) => void;
  updateAction: (action: HTMLCalciteActionElement, index: number) => void;
  updateActions: (actions: HTMLCalciteActionElement[]) => void;
  getActions: () => void;
  isValidKey(key: string, supportedKeys: string[]): boolean;
  menuButtonKeyUp: (event: KeyboardEvent) => void;
  menuButtonKeyDown: (event: KeyboardEvent) => void;
  menuActionsContainerKeyDown: (event: KeyboardEvent) => void;
  menuActionsContainerKeyUp: (event: KeyboardEvent) => void;
  handleActionNavigation: (key: string, actions: HTMLCalciteActionElement[]) => void;
  toggleOpen: (value?: boolean) => void;
}
